"""A consultation"""
type Consultation implements Node {
  """The ID of an object."""
  id: ID!

  """The title of the consultation."""
  title: String!

  """A list of contributor associated with the consultation."""
  contributors(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """Returns the first `n` elements from the list."""
    first: Int = 100
  ): UserConnection!

  """
  Whether the user has vote for a contribution in the related step of this consultation.
  """
  userHasVote(
    """The user's login (for example, an email)."""
    login: String!
  ): Boolean!

  """The number of votes in the related step of this consultation."""
  votesCount: Int @deprecated(reason: "reason: \"In preparation for an upcoming change to the way we expose counters, this field will only be available inside a connection.\", description: \"Field `votesCount` will be removed, use \"votes.totalCount\".")

  """The votes in the related step of this consultation."""
  votes(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """Returns the first `n` elements from the list."""
    first: Int = 100
  ): VoteConnection!
}

"""A string containing a datetime."""
scalar DateTime

"""Fetches an object given its ID"""
interface Node {
  """The ID of an object"""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

"""A participatory project."""
type Project implements Node & UniformResourceLocatable {
  """The ID of an object."""
  id: ID!

  """The URL to this resource."""
  url: URI!

  """Identifies the title of the project."""
  title: String!

  """Identifies when the project was published at."""
  publishedAt: DateTime!
}

"""This is entry point into the schema."""
type Query {
  """The currently authenticated user."""
  viewer: User!

  """Lookup a node by its ID."""
  node(
    """The ID of an object."""
    id: ID!
  ): Node

  """Lookup nodes by a list of IDs."""
  nodes(
    """The list of node IDs."""
    ids: [ID!]!
  ): [Node]!
}

"""A questionnaire is a series of questions that users can answer."""
type Questionnaire implements Node {
  """The ID of an object."""
  id: ID!

  """Identifies the questionnaire title."""
  title: String!

  """Whether the user has reply to a questionnaire."""
  userHasReply(
    """The user's login (for example, an email)."""
    login: String!
  ): Boolean!

  """A list of users that have replied to the questionnaire."""
  participants(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """Returns the first `n` elements from the list."""
    first: Int = 100
  ): UserConnection!
}

"""An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string."""
scalar URI

"""Represents a type that can be retrieved by a URL."""
interface UniformResourceLocatable {
  """The URL to this resource."""
  url: URI!
}

"""A user is an individual's account."""
type User implements Node & UniformResourceLocatable {
  """The ID of an object."""
  id: ID!

  """The URL to this resource."""
  url: URI!

  """The user's public name."""
  username: String

  """Whether or not this user is the authenticated user."""
  isViewer: Boolean!

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime

  """A URL pointing to the user's Facebook account."""
  facebookUrl: URI

  """A URL pointing to the user's Twitter account."""
  twitterUrl: URI

  """A URL pointing to the user's LinkedIn account."""
  linkedInUrl: URI

  """A URL pointing to the user's public website/blog."""
  websiteUrl: URI

  """The user's public profile biography."""
  biography: String

  """Identifies the date and time when this user account was deleted."""
  deletedAccountAt: DateTime

  """A URL pointing to the user's Instagram account."""
  instagramUrl: URI
}

"""A connection to a list of items."""
type UserConnection {
  """Identifies the total count of items in the connection."""
  totalCount: Int!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """Information to aid in pagination."""
  edges: [UserEdge]
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

"""A vote."""
interface Vote {
  """The ID of an object"""
  id: ID!

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
}

"""A connection to a list of items."""
type VoteConnection {
  """Identifies the total count of items in the connection."""
  totalCount: Int!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """Information to aid in pagination."""
  edges: [VoteEdge]
}

"""An edge in a connection."""
type VoteEdge {
  """The item at the end of the edge."""
  node: Vote

  """A cursor for use in pagination."""
  cursor: String!
}
