// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<UserPasswordComplexityField /> gets all errors with getMatchingPasswordError 1`] = `
Object {
  "password-field": "at-least-8-characters-one-digit-one-uppercase-one-lowercase",
}
`;

exports[`<UserPasswordComplexityField /> gets bad passwordConditions with checkPasswordConditions 1`] = `
Object {
  "digit": false,
  "length": true,
  "upperLowercase": false,
}
`;

exports[`<UserPasswordComplexityField /> gets correct passwordConditions with checkPasswordConditions 1`] = `
Object {
  "digit": true,
  "length": true,
  "upperLowercase": true,
}
`;

exports[`<UserPasswordComplexityField /> gets digit and uppercase errors with getMatchingPasswordError 1`] = `
Object {
  "password-field": "at-least-one-digit-one-uppercase-one-lowercase",
}
`;

exports[`<UserPasswordComplexityField /> gets digit error with getMatchingPasswordError 1`] = `
Object {
  "password-field": "at-least-one-digit",
}
`;

exports[`<UserPasswordComplexityField /> gets length and digit errors with getMatchingPasswordError 1`] = `
Object {
  "password-field": "at-least-8-characters-one-digit",
}
`;

exports[`<UserPasswordComplexityField /> gets length and uppercase errors with getMatchingPasswordError 1`] = `
Object {
  "password-field": "at-least-8-characters-one-uppercase-one-lowercase",
}
`;

exports[`<UserPasswordComplexityField /> gets length error with getMatchingPasswordError 1`] = `
Object {
  "password-field": "registration.constraints.password.min",
}
`;

exports[`<UserPasswordComplexityField /> gets no error with getMatchingPasswordError 1`] = `null`;

exports[`<UserPasswordComplexityField /> gets uppercase error with getMatchingPasswordError 1`] = `
Object {
  "password-field": "at-least-one-uppercase-one-lowercase",
}
`;

exports[`<UserPasswordComplexityField /> renders a UserPasswordComplexityField with a passwordComplexityScore of 0 1`] = `
<Popover
  className="in"
  id="pinned-label"
  keepOnHover={true}
  placement="right"
  trigger={
    Array [
      "click",
    ]
  }
  useArrow={true}
>
  <Popover.Trigger>
    <div>
      <Field
        ariaRequired={true}
        autoComplete={true}
        component={[Function]}
        divClassName="div"
        hideValidationMessage={true}
        id="password-field"
        labelClassName=""
        name="password"
        type="password"
      />
    </div>
  </Popover.Trigger>
  <Popover.Content>
    <Popover.Body>
      <div>
        <UserPasswordComplexityUtils__StyleContainer>
          <div
            className=" "
          >
            <FormattedMessage
              id="your-password-must-have"
              values={Object {}}
            />
            <div
              className="mb-5 mt-5 text-gray"
            >
              <CheckCircle
                className="img-check-circle"
                color="#a7a0a0"
                size={15}
              />
              <FormattedMessage
                id="at-least-8-characters"
                values={Object {}}
              />
            </div>
            <div
              className="mb-5 mt-5 text-gray"
            >
              <CheckCircle
                className="img-check-circle"
                color="#a7a0a0"
                size={15}
              />
              <FormattedMessage
                id="lower-and-upper-case-letters"
                values={Object {}}
              />
            </div>
            <div
              className="mb-5 mt-5 text-gray"
            >
              <CheckCircle
                className="img-check-circle"
                color="#a7a0a0"
                size={15}
              />
              <FormattedMessage
                id="at-least-1-digit"
                values={Object {}}
              />
            </div>
            <div>
              <FormattedMessage
                id="password.security"
                values={Object {}}
              />
               
              <FormattedMessage
                id="global.none.feminine"
                values={Object {}}
              />
            </div>
            <ProgressBar
              active={false}
              bsClass="progress-bar"
              className=""
              isChild={false}
              max={100}
              min={0}
              now={0}
              srOnly={false}
              striped={false}
            />
            <FormattedMessage
              id="avoid-passwords"
              values={Object {}}
            />
          </div>
        </UserPasswordComplexityUtils__StyleContainer>
      </div>
    </Popover.Body>
  </Popover.Content>
</Popover>
`;

exports[`<UserPasswordComplexityField /> renders a UserPasswordComplexityField with a passwordComplexityScore of 1 1`] = `
<Popover
  className="in"
  id="pinned-label"
  keepOnHover={true}
  placement="right"
  trigger={
    Array [
      "click",
    ]
  }
  useArrow={true}
>
  <Popover.Trigger>
    <div>
      <Field
        ariaRequired={true}
        autoComplete={true}
        component={[Function]}
        divClassName="div"
        hideValidationMessage={true}
        id="password-field"
        labelClassName=""
        name="password"
        type="password"
      />
    </div>
  </Popover.Trigger>
</Popover>
`;

exports[`<UserPasswordComplexityField /> renders a UserPasswordComplexityField with a passwordComplexityScore of 2 1`] = `
<Popover
  className="in"
  id="pinned-label"
  keepOnHover={true}
  placement="right"
  trigger={
    Array [
      "click",
    ]
  }
  useArrow={true}
>
  <Popover.Trigger>
    <div>
      <Field
        ariaRequired={true}
        autoComplete={true}
        component={[Function]}
        divClassName="div"
        hideValidationMessage={true}
        id="password-field"
        labelClassName=""
        name="password"
        type="password"
      />
    </div>
  </Popover.Trigger>
  <Popover.Content>
    <Popover.Body>
      <div>
        <UserPasswordComplexityUtils__StyleContainer>
          <div
            className=" "
          >
            <FormattedMessage
              id="your-password-must-have"
              values={Object {}}
            />
            <div
              className="mb-5 mt-5 text-gray"
            >
              <CheckCircle
                className="img-check-circle"
                color="#a7a0a0"
                size={15}
              />
              <FormattedMessage
                id="at-least-8-characters"
                values={Object {}}
              />
            </div>
            <div
              className="mb-5 mt-5 text-gray"
            >
              <CheckCircle
                className="img-check-circle"
                color="#a7a0a0"
                size={15}
              />
              <FormattedMessage
                id="lower-and-upper-case-letters"
                values={Object {}}
              />
            </div>
            <div
              className="mb-5 mt-5 text-green"
            >
              <CheckCircle
                className="img-check-circle"
                color="green"
                size={15}
              />
              <FormattedMessage
                id="at-least-1-digit"
                values={Object {}}
              />
            </div>
            <div>
              <FormattedMessage
                id="password.security"
                values={Object {}}
              />
               
              <FormattedMessage
                id="weak"
                values={Object {}}
              />
            </div>
            <ProgressBar
              active={false}
              bsClass="progress-bar"
              className="bg-danger"
              isChild={false}
              max={100}
              min={0}
              now={40}
              srOnly={false}
              striped={false}
            />
            <FormattedMessage
              id="avoid-passwords"
              values={Object {}}
            />
          </div>
        </UserPasswordComplexityUtils__StyleContainer>
      </div>
    </Popover.Body>
  </Popover.Content>
</Popover>
`;

exports[`<UserPasswordComplexityField /> renders a UserPasswordComplexityField with a passwordComplexityScore of 3 1`] = `
<Popover
  className="in"
  id="pinned-label"
  keepOnHover={true}
  placement="right"
  trigger={
    Array [
      "click",
    ]
  }
  useArrow={true}
>
  <Popover.Trigger>
    <div>
      <Field
        ariaRequired={true}
        autoComplete={true}
        component={[Function]}
        divClassName="div"
        hideValidationMessage={true}
        id="password-field"
        labelClassName=""
        name="password"
        type="password"
      />
    </div>
  </Popover.Trigger>
  <Popover.Content>
    <Popover.Body>
      <div>
        <UserPasswordComplexityUtils__StyleContainer>
          <div
            className=" "
          >
            <FormattedMessage
              id="your-password-must-have"
              values={Object {}}
            />
            <div
              className="mb-5 mt-5 text-green"
            >
              <CheckCircle
                className="img-check-circle"
                color="green"
                size={15}
              />
              <FormattedMessage
                id="at-least-8-characters"
                values={Object {}}
              />
            </div>
            <div
              className="mb-5 mt-5 text-gray"
            >
              <CheckCircle
                className="img-check-circle"
                color="#a7a0a0"
                size={15}
              />
              <FormattedMessage
                id="lower-and-upper-case-letters"
                values={Object {}}
              />
            </div>
            <div
              className="mb-5 mt-5 text-gray"
            >
              <CheckCircle
                className="img-check-circle"
                color="#a7a0a0"
                size={15}
              />
              <FormattedMessage
                id="at-least-1-digit"
                values={Object {}}
              />
            </div>
            <div>
              <FormattedMessage
                id="password.security"
                values={Object {}}
              />
               
              <FormattedMessage
                id="medium"
                values={Object {}}
              />
            </div>
            <ProgressBar
              active={false}
              bsClass="progress-bar"
              className="bg-warning"
              isChild={false}
              max={100}
              min={0}
              now={60}
              srOnly={false}
              striped={false}
            />
            <FormattedMessage
              id="avoid-passwords"
              values={Object {}}
            />
          </div>
        </UserPasswordComplexityUtils__StyleContainer>
      </div>
    </Popover.Body>
  </Popover.Content>
</Popover>
`;

exports[`<UserPasswordComplexityField /> renders a UserPasswordComplexityField with a passwordComplexityScore of 4 1`] = `
<Popover
  className="in"
  id="pinned-label"
  keepOnHover={true}
  placement="right"
  trigger={
    Array [
      "click",
    ]
  }
  useArrow={true}
>
  <Popover.Trigger>
    <div>
      <Field
        ariaRequired={true}
        autoComplete={true}
        component={[Function]}
        divClassName="div"
        hideValidationMessage={true}
        id="password-field"
        labelClassName=""
        name="password"
        type="password"
      />
    </div>
  </Popover.Trigger>
  <Popover.Content>
    <Popover.Body>
      <div>
        <UserPasswordComplexityUtils__StyleContainer>
          <div
            className=" "
          >
            <FormattedMessage
              id="your-password-must-have"
              values={Object {}}
            />
            <div
              className="mb-5 mt-5 text-green"
            >
              <CheckCircle
                className="img-check-circle"
                color="green"
                size={15}
              />
              <FormattedMessage
                id="at-least-8-characters"
                values={Object {}}
              />
            </div>
            <div
              className="mb-5 mt-5 text-green"
            >
              <CheckCircle
                className="img-check-circle"
                color="green"
                size={15}
              />
              <FormattedMessage
                id="lower-and-upper-case-letters"
                values={Object {}}
              />
            </div>
            <div
              className="mb-5 mt-5 text-gray"
            >
              <CheckCircle
                className="img-check-circle"
                color="#a7a0a0"
                size={15}
              />
              <FormattedMessage
                id="at-least-1-digit"
                values={Object {}}
              />
            </div>
            <div>
              <FormattedMessage
                id="password.security"
                values={Object {}}
              />
               
              <FormattedMessage
                id="strong"
                values={Object {}}
              />
            </div>
            <ProgressBar
              active={false}
              bsClass="progress-bar"
              className="bg-success"
              isChild={false}
              max={100}
              min={0}
              now={80}
              srOnly={false}
              striped={false}
            />
            <FormattedMessage
              id="avoid-passwords"
              values={Object {}}
            />
          </div>
        </UserPasswordComplexityUtils__StyleContainer>
      </div>
    </Popover.Body>
  </Popover.Content>
</Popover>
`;

exports[`<UserPasswordComplexityField /> renders a UserPasswordComplexityField with a passwordComplexityScore of 5 1`] = `
<Popover
  className="in"
  id="pinned-label"
  keepOnHover={true}
  placement="right"
  trigger={
    Array [
      "click",
    ]
  }
  useArrow={true}
>
  <Popover.Trigger>
    <div>
      <Field
        ariaRequired={true}
        autoComplete={true}
        component={[Function]}
        divClassName="div"
        hideValidationMessage={true}
        id="password-field"
        labelClassName=""
        name="password"
        type="password"
      />
    </div>
  </Popover.Trigger>
  <Popover.Content>
    <Popover.Body>
      <div>
        <UserPasswordComplexityUtils__StyleContainer>
          <div
            className=" "
          >
            <FormattedMessage
              id="your-password-must-have"
              values={Object {}}
            />
            <div
              className="mb-5 mt-5 text-green"
            >
              <CheckCircle
                className="img-check-circle"
                color="green"
                size={15}
              />
              <FormattedMessage
                id="at-least-8-characters"
                values={Object {}}
              />
            </div>
            <div
              className="mb-5 mt-5 text-gray"
            >
              <CheckCircle
                className="img-check-circle"
                color="#a7a0a0"
                size={15}
              />
              <FormattedMessage
                id="lower-and-upper-case-letters"
                values={Object {}}
              />
            </div>
            <div
              className="mb-5 mt-5 text-green"
            >
              <CheckCircle
                className="img-check-circle"
                color="green"
                size={15}
              />
              <FormattedMessage
                id="at-least-1-digit"
                values={Object {}}
              />
            </div>
            <div>
              <FormattedMessage
                id="password.security"
                values={Object {}}
              />
               
              <FormattedMessage
                id="very-strong"
                values={Object {}}
              />
            </div>
            <ProgressBar
              active={false}
              bsClass="progress-bar"
              className="bg-success"
              isChild={false}
              max={100}
              min={0}
              now={100}
              srOnly={false}
              striped={false}
            />
            <FormattedMessage
              id="avoid-passwords"
              values={Object {}}
            />
          </div>
        </UserPasswordComplexityUtils__StyleContainer>
      </div>
    </Popover.Body>
  </Popover.Content>
</Popover>
`;

exports[`<UserPasswordComplexityField /> renders a UserPasswordComplexityField with a passwordComplexityScore of 6 1`] = `
<Popover
  className="in"
  id="pinned-label"
  keepOnHover={true}
  placement="right"
  trigger={
    Array [
      "click",
    ]
  }
  useArrow={true}
>
  <Popover.Trigger>
    <div>
      <Field
        ariaRequired={true}
        autoComplete={true}
        component={[Function]}
        divClassName="div"
        hideValidationMessage={true}
        id="password-field"
        labelClassName=""
        name="password"
        type="password"
      />
    </div>
  </Popover.Trigger>
  <Popover.Content>
    <Popover.Body>
      <div>
        <UserPasswordComplexityUtils__StyleContainer>
          <div
            className=" "
          >
            <FormattedMessage
              id="your-password-must-have"
              values={Object {}}
            />
            <div
              className="mb-5 mt-5 text-gray"
            >
              <CheckCircle
                className="img-check-circle"
                color="#a7a0a0"
                size={15}
              />
              <FormattedMessage
                id="at-least-8-characters"
                values={Object {}}
              />
            </div>
            <div
              className="mb-5 mt-5 text-green"
            >
              <CheckCircle
                className="img-check-circle"
                color="green"
                size={15}
              />
              <FormattedMessage
                id="lower-and-upper-case-letters"
                values={Object {}}
              />
            </div>
            <div
              className="mb-5 mt-5 text-green"
            >
              <CheckCircle
                className="img-check-circle"
                color="green"
                size={15}
              />
              <FormattedMessage
                id="at-least-1-digit"
                values={Object {}}
              />
            </div>
            <div>
              <FormattedMessage
                id="password.security"
                values={Object {}}
              />
               
              <FormattedMessage
                id="global.none.feminine"
                values={Object {}}
              />
            </div>
            <ProgressBar
              active={false}
              bsClass="progress-bar"
              className=""
              isChild={false}
              max={100}
              min={0}
              now={120}
              srOnly={false}
              striped={false}
            />
            <FormattedMessage
              id="avoid-passwords"
              values={Object {}}
            />
          </div>
        </UserPasswordComplexityUtils__StyleContainer>
      </div>
    </Popover.Body>
  </Popover.Content>
</Popover>
`;

exports[`<UserPasswordComplexityField /> renders a UserPasswordComplexityField with a passwordComplexityScore of 7 1`] = `
<Popover
  className="in"
  id="pinned-label"
  keepOnHover={true}
  placement="right"
  trigger={
    Array [
      "click",
    ]
  }
  useArrow={true}
>
  <Popover.Trigger>
    <div>
      <Field
        ariaRequired={true}
        autoComplete={true}
        component={[Function]}
        divClassName="div"
        hideValidationMessage={true}
        id="password-field"
        labelClassName=""
        name="password"
        type="password"
      />
    </div>
  </Popover.Trigger>
  <Popover.Content>
    <Popover.Body>
      <div>
        <UserPasswordComplexityUtils__StyleContainer>
          <div
            className=" "
          >
            <FormattedMessage
              id="your-password-must-have"
              values={Object {}}
            />
            <div
              className="mb-5 mt-5 text-green"
            >
              <CheckCircle
                className="img-check-circle"
                color="green"
                size={15}
              />
              <FormattedMessage
                id="at-least-8-characters"
                values={Object {}}
              />
            </div>
            <div
              className="mb-5 mt-5 text-green"
            >
              <CheckCircle
                className="img-check-circle"
                color="green"
                size={15}
              />
              <FormattedMessage
                id="lower-and-upper-case-letters"
                values={Object {}}
              />
            </div>
            <div
              className="mb-5 mt-5 text-green"
            >
              <CheckCircle
                className="img-check-circle"
                color="green"
                size={15}
              />
              <FormattedMessage
                id="at-least-1-digit"
                values={Object {}}
              />
            </div>
            <div>
              <FormattedMessage
                id="password.security"
                values={Object {}}
              />
               
              <FormattedMessage
                id="global.none.feminine"
                values={Object {}}
              />
            </div>
            <ProgressBar
              active={false}
              bsClass="progress-bar"
              className=""
              isChild={false}
              max={100}
              min={0}
              now={140}
              srOnly={false}
              striped={false}
            />
            <FormattedMessage
              id="avoid-passwords"
              values={Object {}}
            />
          </div>
        </UserPasswordComplexityUtils__StyleContainer>
      </div>
    </Popover.Body>
  </Popover.Content>
</Popover>
`;

exports[`<UserPasswordComplexityField /> renders a mobile version of the field 1`] = `
<Fragment>
  <Field
    ariaRequired={true}
    autoComplete={true}
    component={[Function]}
    divClassName="div"
    hideValidationMessage={true}
    id="password-field"
    labelClassName=""
    name="password"
    type="password"
  />
  <UserPasswordComplexityUtils__StyleContainer>
    <div
      className="mb-20 "
    >
      <FormattedMessage
        id="your-password-must-have"
        values={Object {}}
      />
      <div
        className="mb-5 mt-5 text-green"
      >
        <CheckCircle
          className="img-check-circle"
          color="green"
          size={15}
        />
        <FormattedMessage
          id="at-least-8-characters"
          values={Object {}}
        />
      </div>
      <div
        className="mb-5 mt-5 text-gray"
      >
        <CheckCircle
          className="img-check-circle"
          color="#a7a0a0"
          size={15}
        />
        <FormattedMessage
          id="lower-and-upper-case-letters"
          values={Object {}}
        />
      </div>
      <div
        className="mb-5 mt-5 text-gray"
      >
        <CheckCircle
          className="img-check-circle"
          color="#a7a0a0"
          size={15}
        />
        <FormattedMessage
          id="at-least-1-digit"
          values={Object {}}
        />
      </div>
      <div>
        <FormattedMessage
          id="password.security"
          values={Object {}}
        />
         
        <FormattedMessage
          id="medium"
          values={Object {}}
        />
      </div>
      <ProgressBar
        active={false}
        bsClass="progress-bar"
        className="bg-warning"
        isChild={false}
        max={100}
        min={0}
        now={60}
        srOnly={false}
        striped={false}
      />
      <FormattedMessage
        id="avoid-passwords"
        values={Object {}}
      />
    </div>
  </UserPasswordComplexityUtils__StyleContainer>
</Fragment>
`;
