// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<UserAdminAccount/> should render when user is admin or viewer 1`] = `
<div
  className="box box-primary container-fluid"
>
  <div
    className="box-header"
  >
    <h2
      className="box-title"
    >
      <FormattedMessage
        id="user.profile.edit.account"
        values={Object {}}
      />
    </h2>
  </div>
  <form
    onSubmit={[MockFunction]}
  >
    <div
      className="box-header"
    >
      <h3
        className="box-title"
      >
        <FormattedMessage
          id="admin.fields.step.group_statuses"
          values={Object {}}
        />
      </h3>
    </div>
    <div
      className="box-content box-content__content-form"
    >
      <Field
        component={[Function]}
        id="vip"
        name="vip"
        type="checkbox"
      >
        <FormattedMessage
          id="form.label_vip"
          values={Object {}}
        />
      </Field>
      <Field
        component={[Function]}
        id="enabled"
        name="enabled"
        type="checkbox"
      >
        <FormattedMessage
          id="form.label_enabled"
          values={Object {}}
        />
      </Field>
      <Field
        component={[Function]}
        id="locked"
        name="locked"
        type="checkbox"
      >
        <FormattedMessage
          id="form.label_locked"
          values={Object {}}
        />
      </Field>
      <div
        className="box-header"
      >
        <h3
          className="box-title"
        >
          <FormattedMessage
            id="form.label_real_roles"
            values={Object {}}
          />
        </h3>
      </div>
      <Connect(injectIntl(SelectUserRole))
        id="user_roles"
        label="form.label_real_roles"
        name="roles"
      />
      <div
        className="box-header"
      >
        <h3
          className="box-title"
        >
          <FormattedMessage
            id="subscription"
            values={Object {}}
          />
        </h3>
      </div>
      <Field
        component={[Function]}
        disabled={false}
        id="newsletter"
        name="newsletter"
        type="checkbox"
      >
        <div>
          <FormattedMessage
            id="newsletter"
            values={Object {}}
          />
           
          <DatesInterval
            day="numeric"
            hour="numeric"
            minute="numeric"
            month="long"
            second="numeric"
            showCurrentYear={true}
            startAt="2018-05-03 11:11:11"
            year="numeric"
          />
        </div>
      </Field>
      <Field
        component={[Function]}
        disabled={false}
        id="isSubscribedToProposalNews"
        name="isSubscribedToProposalNews"
        type="checkbox"
      >
        <FormattedMessage
          id="proposals-actualities"
          values={Object {}}
        />
      </Field>
      <ButtonToolbar
        bsClass="btn-toolbar"
        className="box-content__toolbar"
      >
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="primary"
          disabled={true}
          id="user_admin_account_save"
          type="submit"
        >
          <FormattedMessage
            id="global.save"
            values={Object {}}
          />
        </Button>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="danger"
          disabled={false}
          id="delete-account-profile-button"
          onClick={[Function]}
          style={
            Object {
              "marginLeft": 15,
            }
          }
        >
          <FormattedMessage
            id="global.delete"
            values={Object {}}
          />
        </Button>
        <AlertForm
          invalid={false}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          valid={true}
        />
      </ButtonToolbar>
      <Relay(DeleteAccountModal)
        handleClose={[Function]}
        show={false}
        userDeletedIsNotViewer={false}
        viewer={
          Object {
            " $fragmentRefs": null,
            " $refType": null,
            "enabled": true,
            "id": "user1",
            "isAdmin": true,
            "isSubscribedToNewsLetter": true,
            "isSubscribedToProposalNews": true,
            "isSuperAdmin": false,
            "isViewer": true,
            "locked": false,
            "roles": Array [],
            "subscribedToNewsLetterAt": "2018-05-03 11:11:11",
            "vip": false,
          }
        }
      />
    </div>
  </form>
</div>
`;

exports[`<UserAdminAccount/> should render when user is not admin or viewer 1`] = `
<div
  className="box box-primary container-fluid"
>
  <div
    className="box-header"
  >
    <h2
      className="box-title"
    >
      <FormattedMessage
        id="user.profile.edit.account"
        values={Object {}}
      />
    </h2>
  </div>
  <form
    onSubmit={[MockFunction]}
  >
    <div
      className="box-header"
    >
      <h3
        className="box-title"
      >
        <FormattedMessage
          id="admin.fields.step.group_statuses"
          values={Object {}}
        />
      </h3>
    </div>
    <div
      className="box-content box-content__content-form"
    >
      <Field
        component={[Function]}
        id="vip"
        name="vip"
        type="checkbox"
      >
        <FormattedMessage
          id="form.label_vip"
          values={Object {}}
        />
      </Field>
      <Field
        component={[Function]}
        id="enabled"
        name="enabled"
        type="checkbox"
      >
        <FormattedMessage
          id="form.label_enabled"
          values={Object {}}
        />
      </Field>
      <Field
        component={[Function]}
        id="locked"
        name="locked"
        type="checkbox"
      >
        <FormattedMessage
          id="form.label_locked"
          values={Object {}}
        />
      </Field>
      <div
        className="box-header"
      >
        <h3
          className="box-title"
        >
          <FormattedMessage
            id="form.label_real_roles"
            values={Object {}}
          />
        </h3>
      </div>
      <Connect(injectIntl(SelectUserRole))
        id="user_roles"
        label="form.label_real_roles"
        name="roles"
      />
      <div
        className="box-header"
      >
        <h3
          className="box-title"
        >
          <FormattedMessage
            id="subscription"
            values={Object {}}
          />
        </h3>
      </div>
      <Field
        component={[Function]}
        disabled={true}
        id="newsletter"
        name="newsletter"
        type="checkbox"
      >
        <div>
          <FormattedMessage
            id="newsletter"
            values={Object {}}
          />
           
          <DatesInterval
            day="numeric"
            hour="numeric"
            minute="numeric"
            month="long"
            second="numeric"
            showCurrentYear={true}
            startAt={null}
            year="numeric"
          />
        </div>
      </Field>
      <ButtonToolbar
        bsClass="btn-toolbar"
        className="box-content__toolbar"
      >
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="primary"
          disabled={true}
          id="user_admin_account_save"
          type="submit"
        >
          <FormattedMessage
            id="global.save"
            values={Object {}}
          />
        </Button>
        <AlertForm
          invalid={false}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          valid={true}
        />
      </ButtonToolbar>
    </div>
  </form>
</div>
`;

exports[`<UserAdminAccount/> should render when viewer is admin and user is not super admin 1`] = `
<div
  className="box box-primary container-fluid"
>
  <div
    className="box-header"
  >
    <h2
      className="box-title"
    >
      <FormattedMessage
        id="user.profile.edit.account"
        values={Object {}}
      />
    </h2>
  </div>
  <form
    onSubmit={[MockFunction]}
  >
    <div
      className="box-header"
    >
      <h3
        className="box-title"
      >
        <FormattedMessage
          id="admin.fields.step.group_statuses"
          values={Object {}}
        />
      </h3>
    </div>
    <div
      className="box-content box-content__content-form"
    >
      <Field
        component={[Function]}
        id="vip"
        name="vip"
        type="checkbox"
      >
        <FormattedMessage
          id="form.label_vip"
          values={Object {}}
        />
      </Field>
      <Field
        component={[Function]}
        id="enabled"
        name="enabled"
        type="checkbox"
      >
        <FormattedMessage
          id="form.label_enabled"
          values={Object {}}
        />
      </Field>
      <Field
        component={[Function]}
        id="locked"
        name="locked"
        type="checkbox"
      >
        <FormattedMessage
          id="form.label_locked"
          values={Object {}}
        />
      </Field>
      <div
        className="box-header"
      >
        <h3
          className="box-title"
        >
          <FormattedMessage
            id="form.label_real_roles"
            values={Object {}}
          />
        </h3>
      </div>
      <Connect(injectIntl(SelectUserRole))
        id="user_roles"
        label="form.label_real_roles"
        name="roles"
      />
      <div
        className="box-header"
      >
        <h3
          className="box-title"
        >
          <FormattedMessage
            id="subscription"
            values={Object {}}
          />
        </h3>
      </div>
      <Field
        component={[Function]}
        disabled={true}
        id="newsletter"
        name="newsletter"
        type="checkbox"
      >
        <div>
          <FormattedMessage
            id="newsletter"
            values={Object {}}
          />
           
          <DatesInterval
            day="numeric"
            hour="numeric"
            minute="numeric"
            month="long"
            second="numeric"
            showCurrentYear={true}
            startAt="2018-05-03 11:11:11"
            year="numeric"
          />
        </div>
      </Field>
      <Field
        component={[Function]}
        disabled={true}
        id="isSubscribedToProposalNews"
        name="isSubscribedToProposalNews"
        type="checkbox"
      >
        <FormattedMessage
          id="proposals-actualities"
          values={Object {}}
        />
      </Field>
      <ButtonToolbar
        bsClass="btn-toolbar"
        className="box-content__toolbar"
      >
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="primary"
          disabled={true}
          id="user_admin_account_save"
          type="submit"
        >
          <FormattedMessage
            id="global.save"
            values={Object {}}
          />
        </Button>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="danger"
          disabled={false}
          id="delete-account-profile-button"
          onClick={[Function]}
          style={
            Object {
              "marginLeft": 15,
            }
          }
        >
          <FormattedMessage
            id="global.delete"
            values={Object {}}
          />
        </Button>
        <AlertForm
          invalid={false}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          valid={true}
        />
      </ButtonToolbar>
      <Relay(DeleteAccountModal)
        handleClose={[Function]}
        show={false}
        userDeletedIsNotViewer={true}
        viewer={
          Object {
            " $fragmentRefs": null,
            " $refType": null,
            "enabled": true,
            "id": "user1",
            "isAdmin": true,
            "isSubscribedToNewsLetter": true,
            "isSubscribedToProposalNews": true,
            "isSuperAdmin": false,
            "isViewer": false,
            "locked": false,
            "roles": Array [],
            "subscribedToNewsLetterAt": "2018-05-03 11:11:11",
            "vip": false,
          }
        }
      />
    </div>
  </form>
</div>
`;

exports[`<UserAdminAccount/> should render when viewer is super admin 1`] = `
<div
  className="box box-primary container-fluid"
>
  <div
    className="box-header"
  >
    <h2
      className="box-title"
    >
      <FormattedMessage
        id="user.profile.edit.account"
        values={Object {}}
      />
    </h2>
  </div>
  <form
    onSubmit={[MockFunction]}
  >
    <div
      className="box-header"
    >
      <h3
        className="box-title"
      >
        <FormattedMessage
          id="admin.fields.step.group_statuses"
          values={Object {}}
        />
      </h3>
    </div>
    <div
      className="box-content box-content__content-form"
    >
      <Field
        component={[Function]}
        id="vip"
        name="vip"
        type="checkbox"
      >
        <FormattedMessage
          id="form.label_vip"
          values={Object {}}
        />
      </Field>
      <Field
        component={[Function]}
        id="enabled"
        name="enabled"
        type="checkbox"
      >
        <FormattedMessage
          id="form.label_enabled"
          values={Object {}}
        />
      </Field>
      <Field
        component={[Function]}
        id="locked"
        name="locked"
        type="checkbox"
      >
        <FormattedMessage
          id="form.label_locked"
          values={Object {}}
        />
      </Field>
      <div
        className="box-header"
      >
        <h3
          className="box-title"
        >
          <FormattedMessage
            id="form.label_real_roles"
            values={Object {}}
          />
        </h3>
      </div>
      <Connect(injectIntl(SelectUserRole))
        id="user_roles"
        label="form.label_real_roles"
        name="roles"
      />
      <div
        className="box-header"
      >
        <h3
          className="box-title"
        >
          <FormattedMessage
            id="subscription"
            values={Object {}}
          />
        </h3>
      </div>
      <Field
        component={[Function]}
        disabled={true}
        id="newsletter"
        name="newsletter"
        type="checkbox"
      >
        <div>
          <FormattedMessage
            id="newsletter"
            values={Object {}}
          />
           
          <DatesInterval
            day="numeric"
            hour="numeric"
            minute="numeric"
            month="long"
            second="numeric"
            showCurrentYear={true}
            startAt="2018-05-03 11:11:11"
            year="numeric"
          />
        </div>
      </Field>
      <Field
        component={[Function]}
        disabled={true}
        id="isSubscribedToProposalNews"
        name="isSubscribedToProposalNews"
        type="checkbox"
      >
        <FormattedMessage
          id="proposals-actualities"
          values={Object {}}
        />
      </Field>
      <ButtonToolbar
        bsClass="btn-toolbar"
        className="box-content__toolbar"
      >
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="primary"
          disabled={true}
          id="user_admin_account_save"
          type="submit"
        >
          <FormattedMessage
            id="global.save"
            values={Object {}}
          />
        </Button>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="danger"
          disabled={false}
          id="delete-account-profile-button"
          onClick={[Function]}
          style={
            Object {
              "marginLeft": 15,
            }
          }
        >
          <FormattedMessage
            id="global.delete"
            values={Object {}}
          />
        </Button>
        <AlertForm
          invalid={false}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          valid={true}
        />
      </ButtonToolbar>
      <Relay(DeleteAccountModal)
        handleClose={[Function]}
        show={false}
        userDeletedIsNotViewer={true}
        viewer={
          Object {
            " $fragmentRefs": null,
            " $refType": null,
            "enabled": true,
            "id": "user1",
            "isAdmin": true,
            "isSubscribedToNewsLetter": true,
            "isSubscribedToProposalNews": true,
            "isSuperAdmin": false,
            "isViewer": false,
            "locked": false,
            "roles": Array [],
            "subscribedToNewsLetterAt": "2018-05-03 11:11:11",
            "vip": false,
          }
        }
      />
    </div>
  </form>
</div>
`;
