// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<LoginForm /> renders a form with inputs and connection not restricted 1`] = `
<div
  className="form_no-bold-label"
>
  <Field
    ariaRequired={true}
    autoComplete="email"
    autoFocus={true}
    component={[Function]}
    id="username"
    label={
      <FormattedMessage
        id="global.email"
        values={Object {}}
      />
    }
    labelClassName="font-weight-normal"
    name="username"
    type="email"
  />
  <Field
    ariaRequired={true}
    autoComplete="off"
    component={[Function]}
    id="password"
    label={
      <FormattedMessage
        id="global.password"
        values={Object {}}
      />
    }
    labelClassName="w-100 font-weight-normal"
    name="password"
    type="password"
  />
  <a
    href="/resetting/request"
  >
    <FormattedMessage
      id="global.forgot_password"
      values={Object {}}
    />
  </a>
  <Field
    captchaRef={
      Object {
        "current": null,
      }
    }
    component={[Function]}
    disabled={true}
    id="captcha"
    name="captcha"
    type="captcha"
  />
</div>
`;

exports[`<LoginForm /> renders a form with inputs and connection restricted 1`] = `
<div
  className="form_no-bold-label"
>
  <Field
    ariaRequired={true}
    autoComplete="email"
    autoFocus={true}
    component={[Function]}
    id="username"
    label={
      <FormattedMessage
        id="global.email"
        values={Object {}}
      />
    }
    labelClassName="font-weight-normal"
    name="username"
    type="email"
  />
  <Field
    ariaRequired={true}
    autoComplete="off"
    component={[Function]}
    id="password"
    label={
      <FormattedMessage
        id="global.password"
        values={Object {}}
      />
    }
    labelClassName="w-100 font-weight-normal"
    name="password"
    type="password"
  />
  <a
    href="/resetting/request"
  >
    <FormattedMessage
      id="global.forgot_password"
      values={Object {}}
    />
  </a>
  <Field
    captchaRef={
      Object {
        "current": null,
      }
    }
    component={[Function]}
    disabled={true}
    id="captcha"
    name="captcha"
    type="captcha"
  />
</div>
`;
