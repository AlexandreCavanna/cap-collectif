// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<LoginModal /> renders a visible modal if shown 1`] = `
<Modal
  animation={false}
  aria-labelledby="contained-modal-title-lg"
  autoFocus={true}
  backdrop="static"
  bsClass="modal"
  bsSize="small"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[MockFunction]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
  style={
    Object {
      "zIndex": 9000,
    }
  }
>
  <form
    id="login-form"
    onSubmit={[MockFunction]}
  >
    <ModalHeader
      bsClass="modal-header"
      closeButton={true}
      closeLabel="close.modal"
    >
      <ModalTitle
        bsClass="modal-title"
        componentClass="h1"
        id="contained-modal-title-lg"
      >
        <FormattedMessage
          id="global.login"
          values={Object {}}
        />
      </ModalTitle>
    </ModalHeader>
    <ModalBody
      bsClass="modal-body"
      componentClass="div"
    >
      <Connect(LoginBox) />
    </ModalBody>
    <ModalFooter
      bsClass="modal-footer"
      componentClass="div"
    >
      <CloseButton
        label="global.cancel"
        onClose={[MockFunction]}
      />
      <Button
        active={false}
        block={false}
        bsClass="btn"
        bsStyle="primary"
        disabled={false}
        id="confirm-login"
        type="submit"
      >
        <FormattedMessage
          id="global.login_me"
          values={Object {}}
        />
      </Button>
    </ModalFooter>
  </form>
</Modal>
`;

exports[`<LoginModal /> renders modal without connection button 1`] = `
<Modal
  animation={false}
  aria-labelledby="contained-modal-title-lg"
  autoFocus={true}
  backdrop="static"
  bsClass="modal"
  bsSize="small"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[MockFunction]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
  style={
    Object {
      "zIndex": 9000,
    }
  }
>
  <form
    id="login-form"
    onSubmit={[MockFunction]}
  >
    <ModalHeader
      bsClass="modal-header"
      closeButton={true}
      closeLabel="close.modal"
    >
      <ModalTitle
        bsClass="modal-title"
        componentClass="h1"
        id="contained-modal-title-lg"
      >
        <FormattedMessage
          id="global.login"
          values={Object {}}
        />
      </ModalTitle>
    </ModalHeader>
    <ModalBody
      bsClass="modal-body"
      componentClass="div"
    >
      <Connect(LoginBox) />
    </ModalBody>
    <ModalFooter
      bsClass="modal-footer"
      componentClass="div"
    >
      <CloseButton
        label="global.cancel"
        onClose={[MockFunction]}
      />
    </ModalFooter>
  </form>
</Modal>
`;
