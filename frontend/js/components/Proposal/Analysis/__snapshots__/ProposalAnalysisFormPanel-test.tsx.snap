// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProposalAnalysisFormPanel  />  renders correctly 1`] = `
<Fragment>
  <form
    id="proposal-analysis-form"
    style={
      Object {
        "opacity": "1",
      }
    }
  >
    <ProposalAnalysisFormPanel__AnalysisForm>
      <FieldArray
        change={[MockFunction]}
        component={[Function]}
        dispatch={[MockFunction]}
        form="proposal-analysis-form"
        intl={
          Object {
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "locale": "fr-FR",
            "messages": Object {},
            "now": [Function],
          }
        }
        memoize={[Function]}
        name="responses"
        questions={Array []}
        responses={Array []}
        typeForm="questionnaire"
        unstable__enableCapcoUiDs={true}
      />
    </ProposalAnalysisFormPanel__AnalysisForm>
    <ProposalAnalysisFormPanel__Validation>
      <Field
        component={[Function]}
        id="status-FAVOURABLE"
        label={
          <FormattedMessage
            id="global.review"
            values={Object {}}
          />
        }
        name="status"
        onChange={[Function]}
        radioChecked={true}
        type="radio"
        typeForm="questionnaire"
        value="FAVOURABLE"
      >
        <ProposalAnalysisStatusLabel
          color="#28a745"
          fontSize={14}
          iconName="favorable"
          iconSize={12}
          text="global.favorable"
        />
      </Field>
      <Field
        component={[Function]}
        id="status-UNFAVOURABLE"
        name="status"
        onChange={[Function]}
        radioChecked={false}
        type="radio"
        typeForm="questionnaire"
        value="UNFAVOURABLE"
      >
        <ProposalAnalysisStatusLabel
          color="#dc3545"
          fontSize={14}
          iconName="unfavorable"
          iconSize={10}
          text="global.filter-unfavourable"
        />
      </Field>
      <Field
        component={[Function]}
        id="status-NONE"
        name="status"
        onChange={[Function]}
        radioChecked={false}
        type="radio"
        typeForm="questionnaire"
        value="NONE"
      >
        <ProposalAnalysisStatusLabel
          color="#17a2b8"
          fontSize={14}
          iconName="silent"
          iconSize={12}
          text="global.filter_not-pronounced"
        />
      </Field>
      <ProposalAnalysisFormPanel__ValidateButton
        disabled={false}
        id="validate-proposal-analysis-button"
        onClick={[Function]}
        type="button"
      >
        <FormattedMessage
          id="global.finish"
          values={Object {}}
        />
      </ProposalAnalysisFormPanel__ValidateButton>
    </ProposalAnalysisFormPanel__Validation>
  </form>
  <ProposalAnalysisComments
    proposalAnalysis={
      Object {
        " $fragmentRefs": null,
        "analyst": Object {
          "id": "userID345",
        },
        "id": "a1id",
        "responses": Array [],
        "state": "FAVOURABLE",
      }
    }
    viewer={
      Object {
        " $fragmentRefs": null,
        " $refType": null,
      }
    }
  />
</Fragment>
`;

exports[`<ProposalAnalysisFormPanel  />  renders correctly with proposal revisions feature enabled 1`] = `
<Fragment>
  <form
    id="proposal-analysis-form"
    style={
      Object {
        "opacity": "1",
      }
    }
  >
    <ProposalRevisionPanel
      proposal={
        Object {
          " $fragmentRefs": null,
          " $refType": null,
          "analyses": Array [
            Object {
              " $fragmentRefs": null,
              "analyst": Object {
                "id": "userID345",
              },
              "id": "a1id",
              "responses": Array [],
              "state": "FAVOURABLE",
            },
          ],
          "form": Object {
            "analysisConfiguration": Object {
              "evaluationForm": Object {
                "questions": Array [],
              },
              "id": "analysisConfigId",
            },
          },
          "id": "id",
        }
      }
    />
    <ProposalAnalysisFormPanel__AnalysisForm>
      <FieldArray
        change={[MockFunction]}
        component={[Function]}
        dispatch={[MockFunction]}
        form="proposal-analysis-form"
        intl={
          Object {
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "locale": "fr-FR",
            "messages": Object {},
            "now": [Function],
          }
        }
        memoize={[Function]}
        name="responses"
        questions={Array []}
        responses={Array []}
        typeForm="questionnaire"
        unstable__enableCapcoUiDs={true}
      />
    </ProposalAnalysisFormPanel__AnalysisForm>
    <ProposalAnalysisFormPanel__Validation>
      <Field
        component={[Function]}
        id="status-FAVOURABLE"
        label={
          <FormattedMessage
            id="global.review"
            values={Object {}}
          />
        }
        name="status"
        onChange={[Function]}
        radioChecked={true}
        type="radio"
        typeForm="questionnaire"
        value="FAVOURABLE"
      >
        <ProposalAnalysisStatusLabel
          color="#28a745"
          fontSize={14}
          iconName="favorable"
          iconSize={12}
          text="global.favorable"
        />
      </Field>
      <Field
        component={[Function]}
        id="status-UNFAVOURABLE"
        name="status"
        onChange={[Function]}
        radioChecked={false}
        type="radio"
        typeForm="questionnaire"
        value="UNFAVOURABLE"
      >
        <ProposalAnalysisStatusLabel
          color="#dc3545"
          fontSize={14}
          iconName="unfavorable"
          iconSize={10}
          text="global.filter-unfavourable"
        />
      </Field>
      <Field
        component={[Function]}
        id="status-NONE"
        name="status"
        onChange={[Function]}
        radioChecked={false}
        type="radio"
        typeForm="questionnaire"
        value="NONE"
      >
        <ProposalAnalysisStatusLabel
          color="#17a2b8"
          fontSize={14}
          iconName="silent"
          iconSize={12}
          text="global.filter_not-pronounced"
        />
      </Field>
      <ProposalAnalysisFormPanel__ValidateButton
        disabled={false}
        id="validate-proposal-analysis-button"
        onClick={[Function]}
        type="button"
      >
        <FormattedMessage
          id="global.finish"
          values={Object {}}
        />
      </ProposalAnalysisFormPanel__ValidateButton>
      <ProposalRevision
        proposal={
          Object {
            " $fragmentRefs": null,
            " $refType": null,
            "analyses": Array [
              Object {
                " $fragmentRefs": null,
                "analyst": Object {
                  "id": "userID345",
                },
                "id": "a1id",
                "responses": Array [],
                "state": "FAVOURABLE",
              },
            ],
            "form": Object {
              "analysisConfiguration": Object {
                "evaluationForm": Object {
                  "questions": Array [],
                },
                "id": "analysisConfigId",
              },
            },
            "id": "id",
          }
        }
        unstable__enableCapcoUiDs={true}
      >
        <Component />
      </ProposalRevision>
    </ProposalAnalysisFormPanel__Validation>
  </form>
  <ProposalAnalysisComments
    proposalAnalysis={
      Object {
        " $fragmentRefs": null,
        "analyst": Object {
          "id": "userID345",
        },
        "id": "a1id",
        "responses": Array [],
        "state": "FAVOURABLE",
      }
    }
    viewer={
      Object {
        " $fragmentRefs": null,
        " $refType": null,
      }
    }
  />
</Fragment>
`;
