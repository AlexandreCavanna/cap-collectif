// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProposalAdminContentForm /> render correctly 1`] = `
<Fragment>
  <Relay(Connect(ProposalFusionEditModal))
    onClose={[Function]}
    proposal={
      Object {
        " $fragmentRefs": null,
        " $refType": null,
        "address": null,
        "author": Object {
          "displayName": "Author",
          "id": "1",
        },
        "body": "body",
        "category": Object {
          "id": "1",
        },
        "decision": Object {
          "estimatedCost": null,
          "state": "IN_PROGRESS",
        },
        "district": Object {
          "id": "1",
        },
        "estimation": 1000,
        "facebookUrl": "https://facebook.com",
        "form": Object {
          "adminUrl": "http://capco.dev/pfrom",
          "analysisConfiguration": Object {
            "costEstimationEnabled": false,
            "isImmediatelyEffective": false,
          },
          "categories": Array [
            Object {
              "id": "1",
              "name": "category-1",
            },
            Object {
              "id": "2",
              "name": "category-2",
            },
          ],
          "categoryMandatory": true,
          "descriptionMandatory": true,
          "districtMandatory": true,
          "districts": Array [],
          "id": "form1",
          "isUsingAnySocialNetworks": true,
          "questions": Array [
            Object {
              "__typename": "SimpleQuestion",
              "alwaysJumpDestinationQuestion": null,
              "choices": Object {
                "edges": Array [],
                "pageInfo": Object {
                  "hasNextPage": false,
                },
                "totalCount": 0,
              },
              "description": null,
              "descriptionUsingJoditWysiwyg": false,
              "destinationJumps": Array [],
              "helpText": "Help 1",
              "hidden": false,
              "id": "1",
              "isOtherAllowed": false,
              "jumps": Array [],
              "level": 0,
              "number": 1,
              "position": 0,
              "private": false,
              "required": true,
              "title": "title",
              "type": "text",
              "validationRule": null,
            },
          ],
          "themeMandatory": true,
          "usingAddress": true,
          "usingCategories": true,
          "usingDescription": true,
          "usingDistrict": true,
          "usingFacebook": true,
          "usingInstagram": true,
          "usingLinkedIn": true,
          "usingSummary": true,
          "usingThemes": true,
          "usingTwitter": true,
          "usingWebPage": true,
          "usingYoutube": true,
        },
        "id": "1",
        "instagramUrl": "https://instagram.com",
        "likers": Array [
          Object {
            "displayName": "liker-1",
            "id": "1",
          },
        ],
        "linkedInUrl": "https://linkedin.com",
        "media": Object {
          "id": "1",
          "url": "",
        },
        "mergedFrom": Array [
          Object {
            "adminUrl": "http://capco.dev/child1",
            "id": "1",
            "title": "Child 1",
          },
          Object {
            "adminUrl": "http://capco.dev/child2",
            "id": "2",
            "title": "Child 2",
          },
        ],
        "mergedIn": Array [],
        "publicationStatus": "DRAFT",
        "responses": Array [
          Object {
            "question": Object {
              "id": "1",
            },
            "value": "value-1",
          },
          Object {
            "medias": Array [
              Object {
                "id": "1",
                "name": "media-1",
                "size": "100",
                "url": "",
              },
            ],
            "question": Object {
              "id": "2",
            },
          },
        ],
        "summary": "summary",
        "theme": Object {
          "id": "theme-1",
        },
        "title": "title-1",
        "twitterUrl": "https://twitter.com",
        "webPageUrl": "",
        "youtubeUrl": "",
      }
    }
    show={false}
  />
  <form
    onSubmit={[MockFunction]}
  >
    <div
      className="box box-primary container-fluide"
    >
      <div
        className="box-header"
      >
        <h3
          className="box-title"
        >
          <FormattedMessage
            id="global.contenu"
            values={Object {}}
          />
        </h3>
        <a
          className="pull-right link"
          href="admin.help.link.proposal.body"
          rel="noopener noreferrer"
          target="_blank"
        >
          <i
            className="fa fa-info-circle"
          />
          global.help
        </a>
      </div>
      <div
        className="box-content box-content__content-form"
      >
        <Field
          component={[Function]}
          id="proposal_title"
          label={
            <FormattedMessage
              id="proposal.title"
              values={Object {}}
            />
          }
          name="title"
          type="text"
        />
        <Field
          component={[Function]}
          id="global.summary"
          label={
            <span>
              <FormattedMessage
                id="global.summary"
                values={Object {}}
              />
              <span
                className="excerpt"
              >
                 
                <FormattedMessage
                  id="global.optional"
                  values={Object {}}
                />
              </span>
            </span>
          }
          name="summary"
          type="textarea"
        />
        <UserListField
          ariaControls="ProposalAdminContentForm-filter-user-listbox"
          authorOfEvent={false}
          autoload={false}
          className=""
          clearable={false}
          debounce={false}
          disabled={false}
          id="proposal-admin-author"
          inputClassName="fake-inputClassName"
          label={
            <FormattedMessage
              id="global.author"
              values={Object {}}
            />
          }
          labelClassName="control-label"
          multi={false}
          name="author"
          placeholder="global.author"
          selectFieldIsObject={true}
        />
        <Field
          component={[Function]}
          id="global.category"
          label={
            <span>
              <FormattedMessage
                id="global.category"
                values={Object {}}
              />
            </span>
          }
          name="category"
          type="select"
        >
          <FormattedMessage
            id="proposal.select.category"
            values={Object {}}
          >
            <Component />
          </FormattedMessage>
          <option
            key="1"
            value="1"
          >
            category-1
          </option>
          <option
            key="2"
            value="2"
          >
            category-2
          </option>
        </Field>
        <Field
          addressProps={
            Object {
              "getAddress": [Function],
            }
          }
          component={[Function]}
          formName="proposal-admin-edit"
          id="proposal_address"
          label={
            <FormattedMessage
              id="proposal_form.address"
              values={Object {}}
            />
          }
          name="addressText"
          placeholder="proposal.map.form.placeholder"
          type="address"
        />
        <Field
          component={[Function]}
          id="proposal_body"
          label={
            <FormattedMessage
              id="proposal.body"
              values={Object {}}
            />
          }
          name="body"
          type="editor"
        />
        <FieldArray
          change={[MockFunction]}
          component={[Function]}
          form="proposal-admin-edit"
          intl={
            Object {
              "formatDate": [Function],
              "formatHTMLMessage": [Function],
              "formatMessage": [Function],
              "formatNumber": [Function],
              "formatPlural": [Function],
              "formatRelative": [Function],
              "formatTime": [Function],
              "formats": Object {},
              "locale": "fr-FR",
              "messages": Object {},
              "now": [Function],
            }
          }
          memoize={[Function]}
          name="responses"
          questions={
            Array [
              Object {
                "__typename": "SimpleQuestion",
                "alwaysJumpDestinationQuestion": null,
                "choices": Object {
                  "edges": Array [],
                  "pageInfo": Object {
                    "hasNextPage": false,
                  },
                  "totalCount": 0,
                },
                "description": null,
                "descriptionUsingJoditWysiwyg": false,
                "destinationJumps": Array [],
                "helpText": "Help 1",
                "hidden": false,
                "id": "1",
                "isOtherAllowed": false,
                "jumps": Array [],
                "level": 0,
                "number": 1,
                "position": 0,
                "private": false,
                "required": true,
                "title": "title",
                "type": "text",
                "validationRule": null,
              },
            ]
          }
          responses={Array []}
        />
        <Field
          component={[Function]}
          id="proposal_media"
          image=""
          label={
            <span>
              <FormattedMessage
                id="proposal.media"
                values={Object {}}
              />
              <span
                className="excerpt"
              >
                 
                <FormattedMessage
                  id="global.optional"
                  values={Object {}}
                />
              </span>
            </span>
          }
          name="media"
          type="image"
        />
      </div>
    </div>
    <ProposalAdminContentForm__ExternaLinksCard
      backgroundColor="#ffffff"
      mt={6}
      paddingY={8}
    >
      <Heading
        as="h3"
        color="#003670"
        fontSize="18px"
        fontWeight="600"
        lineHeight="24px"
      >
        <FormattedMessage
          id="external-links"
          values={Object {}}
        />
      </Heading>
      <Field
        component={[Function]}
        id="proposal_wep_page"
        label={
          <FormattedMessage
            id="form.label_website"
            values={Object {}}
          />
        }
        name="webPageUrl"
        placeholder="your-url"
        type="text"
      />
      <Field
        component={[Function]}
        id="proposal_twitter"
        label={
          <FormattedMessage
            id="share.twitter"
            values={Object {}}
          />
        }
        name="twitterUrl"
        placeholder="https://twitter.com/pseudo"
        type="text"
      />
      <Field
        component={[Function]}
        id="proposal_facebook"
        label={
          <FormattedMessage
            id="share.facebook"
            values={Object {}}
          />
        }
        name="facebookUrl"
        placeholder="https://facebook.com/pseudo"
        type="text"
      />
      <Field
        component={[Function]}
        id="proposal_instagram"
        label={
          <FormattedMessage
            id="instagram"
            values={Object {}}
          />
        }
        name="instagramUrl"
        placeholder="https://instagram.com/pseudo"
        type="text"
      />
      <Field
        component={[Function]}
        id="proposal_linkedin"
        label={
          <FormattedMessage
            id="share.linkedin"
            values={Object {}}
          />
        }
        name="linkedInUrl"
        placeholder="https://linkedin.com/in/pseudo"
        type="text"
      />
      <Field
        component={[Function]}
        id="proposal_youtube"
        label={
          <FormattedMessage
            id="youtube"
            values={Object {}}
          />
        }
        name="youtubeUrl"
        placeholder="https://youtube.com/channel/pseudo"
        type="text"
      />
    </ProposalAdminContentForm__ExternaLinksCard>
    <ForwardRef
      direction="row"
      mb={24}
      mt={24}
      spacing={24}
    >
      <ProposalAdminContentForm__NotationCard
        backgroundColor="white"
        flex="1"
        px={24}
      >
        <ForwardRef
          spacing="9px"
        >
          <Text
            as="h3"
            color="#003670"
            fontSize="18px"
            fontWeight="600"
            lineHeight="24px"
            margin="0"
          >
            <FormattedMessage
              id="proposal.estimation"
              values={Object {}}
            />
          </Text>
          <a
            className="link"
            href="admin.help.link.proposal.estimation"
            rel="noopener noreferrer"
            style={
              Object {
                "marginTop": 3,
              }
            }
            target="_blank"
          >
            <Icon
              color="#3b88fd"
              name="information"
              size={14}
            />
          </a>
        </ForwardRef>
        <ForwardRef
          mb="24px"
          mt="8px"
        >
          <AppBox
            ml={0}
          >
            <Text
              as="div"
              color="#85919D"
              fontSize="13px"
              fontWeight="normal"
              lineHeight="16px"
              maxWidth="450px"
            >
              <FormattedMessage
                id="estimation-help-text-2"
                values={Object {}}
              />
            </Text>
            <Field
              addonBefore={
                <Glyphicon
                  bsClass="glyphicon"
                  glyph="euro"
                />
              }
              className="mt-24 mb-24"
              component={[Function]}
              id="proposal_estimation"
              label={
                <FormattedMessage
                  id="cost"
                  values={Object {}}
                />
              }
              labelClassName="mb-5"
              name="estimation"
              normalize={[Function]}
              placeholder="estimation-placeholder"
              type="number"
            />
          </AppBox>
        </ForwardRef>
      </ProposalAdminContentForm__NotationCard>
      <ProposalAdminContentForm__NotationCard
        backgroundColor="white"
        flex="1"
        px={24}
      >
        <ForwardRef
          spacing="9px"
        >
          <Text
            as="h3"
            color="#003670"
            fontSize="18px"
            fontWeight="600"
            lineHeight="24px"
            margin="0"
          >
            <FormattedMessage
              id="admin.fields.proposal.likers"
              values={Object {}}
            />
          </Text>
          <a
            className="link"
            href="admin.help.link.proposal.heart"
            rel="noopener noreferrer"
            style={
              Object {
                "marginTop": 3,
              }
            }
            target="_blank"
          >
            <Icon
              color="#3b88fd"
              name="information"
              size={14}
            />
          </a>
        </ForwardRef>
        <AppBox
          color="#85919D"
          fontSize="13px"
          fontWeight="normal"
          lineHeight="16px"
          maxWidth="450px"
          mt="8px"
        >
          <FormattedMessage
            id="likers-helpText"
            values={Object {}}
          />
        </AppBox>
        <UserListField
          ariaControls="ProposalAdminNotationForm-filter-user-listbox"
          authorOfEvent={false}
          autoload={false}
          blockClassName="likers-fields"
          className=""
          clearable={false}
          debounce={false}
          id="likers"
          inputClassName="fake-inputClassName"
          label={
            <FormattedMessage
              id="admin.fields.event_registration.user"
              values={Object {}}
            />
          }
          labelClassName="mt-0 mb-5"
          multi={true}
          name="likers"
          noOptionsMessage="no_result"
          placeholder="select-users"
        />
      </ProposalAdminContentForm__NotationCard>
    </ForwardRef>
    <ButtonToolbar
      bsClass="btn-toolbar"
      className="box-content__toolbar"
    >
      <Connect(SubmitButton)
        bsStyle="primary"
        disabled={true}
        id="proposal_admin_content_save"
        label="global.save"
        onSubmit={[Function]}
        type="submit"
      />
      <AlertForm
        invalid={false}
        submitFailed={false}
        submitSucceeded={false}
        submitting={false}
        valid={true}
      />
    </ButtonToolbar>
  </form>
</Fragment>
`;

exports[`<ProposalAdminContentForm /> render correctly with estimation 1`] = `
<Fragment>
  <Relay(Connect(ProposalFusionEditModal))
    onClose={[Function]}
    proposal={
      Object {
        " $fragmentRefs": null,
        " $refType": null,
        "address": null,
        "author": Object {
          "displayName": "Author",
          "id": "1",
        },
        "body": "body",
        "category": Object {
          "id": "1",
        },
        "decision": Object {
          "estimatedCost": 10000,
          "state": "DONE",
        },
        "district": Object {
          "id": "1",
        },
        "estimation": 1000,
        "facebookUrl": "https://facebook.com",
        "form": Object {
          "adminUrl": "http://capco.dev/pfrom",
          "analysisConfiguration": Object {
            "costEstimationEnabled": true,
            "isImmediatelyEffective": true,
          },
          "categories": Array [
            Object {
              "id": "1",
              "name": "category-1",
            },
            Object {
              "id": "2",
              "name": "category-2",
            },
          ],
          "categoryMandatory": true,
          "descriptionMandatory": true,
          "districtMandatory": true,
          "districts": Array [],
          "id": "form1",
          "isUsingAnySocialNetworks": true,
          "questions": Array [
            Object {
              "__typename": "SimpleQuestion",
              "alwaysJumpDestinationQuestion": null,
              "choices": Object {
                "edges": Array [],
                "pageInfo": Object {
                  "hasNextPage": false,
                },
                "totalCount": 0,
              },
              "description": null,
              "descriptionUsingJoditWysiwyg": false,
              "destinationJumps": Array [],
              "helpText": "Help 1",
              "hidden": false,
              "id": "1",
              "isOtherAllowed": false,
              "jumps": Array [],
              "level": 0,
              "number": 1,
              "position": 0,
              "private": false,
              "required": true,
              "title": "title",
              "type": "text",
              "validationRule": null,
            },
          ],
          "themeMandatory": true,
          "usingAddress": true,
          "usingCategories": true,
          "usingDescription": true,
          "usingDistrict": true,
          "usingFacebook": true,
          "usingInstagram": true,
          "usingLinkedIn": true,
          "usingSummary": true,
          "usingThemes": true,
          "usingTwitter": true,
          "usingWebPage": true,
          "usingYoutube": true,
        },
        "id": "1",
        "instagramUrl": "https://instagram.com",
        "likers": Array [
          Object {
            "displayName": "liker-1",
            "id": "1",
          },
        ],
        "linkedInUrl": "https://linkedin.com",
        "media": Object {
          "id": "1",
          "url": "",
        },
        "mergedFrom": Array [
          Object {
            "adminUrl": "http://capco.dev/child1",
            "id": "1",
            "title": "Child 1",
          },
          Object {
            "adminUrl": "http://capco.dev/child2",
            "id": "2",
            "title": "Child 2",
          },
        ],
        "mergedIn": Array [],
        "publicationStatus": "DRAFT",
        "responses": Array [
          Object {
            "question": Object {
              "id": "1",
            },
            "value": "value-1",
          },
          Object {
            "medias": Array [
              Object {
                "id": "1",
                "name": "media-1",
                "size": "100",
                "url": "",
              },
            ],
            "question": Object {
              "id": "2",
            },
          },
        ],
        "summary": "summary",
        "theme": Object {
          "id": "theme-1",
        },
        "title": "title-1",
        "twitterUrl": "https://twitter.com",
        "webPageUrl": "",
        "youtubeUrl": "",
      }
    }
    show={false}
  />
  <form
    onSubmit={[MockFunction]}
  >
    <div
      className="box box-primary container-fluide"
    >
      <div
        className="box-header"
      >
        <h3
          className="box-title"
        >
          <FormattedMessage
            id="global.contenu"
            values={Object {}}
          />
        </h3>
        <a
          className="pull-right link"
          href="admin.help.link.proposal.body"
          rel="noopener noreferrer"
          target="_blank"
        >
          <i
            className="fa fa-info-circle"
          />
          global.help
        </a>
      </div>
      <div
        className="box-content box-content__content-form"
      >
        <Field
          component={[Function]}
          id="proposal_title"
          label={
            <FormattedMessage
              id="proposal.title"
              values={Object {}}
            />
          }
          name="title"
          type="text"
        />
        <Field
          component={[Function]}
          id="global.summary"
          label={
            <span>
              <FormattedMessage
                id="global.summary"
                values={Object {}}
              />
              <span
                className="excerpt"
              >
                 
                <FormattedMessage
                  id="global.optional"
                  values={Object {}}
                />
              </span>
            </span>
          }
          name="summary"
          type="textarea"
        />
        <UserListField
          ariaControls="ProposalAdminContentForm-filter-user-listbox"
          authorOfEvent={false}
          autoload={false}
          className=""
          clearable={false}
          debounce={false}
          disabled={false}
          id="proposal-admin-author"
          inputClassName="fake-inputClassName"
          label={
            <FormattedMessage
              id="global.author"
              values={Object {}}
            />
          }
          labelClassName="control-label"
          multi={false}
          name="author"
          placeholder="global.author"
          selectFieldIsObject={true}
        />
        <Field
          component={[Function]}
          id="global.category"
          label={
            <span>
              <FormattedMessage
                id="global.category"
                values={Object {}}
              />
            </span>
          }
          name="category"
          type="select"
        >
          <FormattedMessage
            id="proposal.select.category"
            values={Object {}}
          >
            <Component />
          </FormattedMessage>
          <option
            key="1"
            value="1"
          >
            category-1
          </option>
          <option
            key="2"
            value="2"
          >
            category-2
          </option>
        </Field>
        <Field
          addressProps={
            Object {
              "getAddress": [Function],
            }
          }
          component={[Function]}
          formName="proposal-admin-edit"
          id="proposal_address"
          label={
            <FormattedMessage
              id="proposal_form.address"
              values={Object {}}
            />
          }
          name="addressText"
          placeholder="proposal.map.form.placeholder"
          type="address"
        />
        <Field
          component={[Function]}
          id="proposal_body"
          label={
            <FormattedMessage
              id="proposal.body"
              values={Object {}}
            />
          }
          name="body"
          type="editor"
        />
        <FieldArray
          change={[MockFunction]}
          component={[Function]}
          form="proposal-admin-edit"
          intl={
            Object {
              "formatDate": [Function],
              "formatHTMLMessage": [Function],
              "formatMessage": [Function],
              "formatNumber": [Function],
              "formatPlural": [Function],
              "formatRelative": [Function],
              "formatTime": [Function],
              "formats": Object {},
              "locale": "fr-FR",
              "messages": Object {},
              "now": [Function],
            }
          }
          memoize={[Function]}
          name="responses"
          questions={
            Array [
              Object {
                "__typename": "SimpleQuestion",
                "alwaysJumpDestinationQuestion": null,
                "choices": Object {
                  "edges": Array [],
                  "pageInfo": Object {
                    "hasNextPage": false,
                  },
                  "totalCount": 0,
                },
                "description": null,
                "descriptionUsingJoditWysiwyg": false,
                "destinationJumps": Array [],
                "helpText": "Help 1",
                "hidden": false,
                "id": "1",
                "isOtherAllowed": false,
                "jumps": Array [],
                "level": 0,
                "number": 1,
                "position": 0,
                "private": false,
                "required": true,
                "title": "title",
                "type": "text",
                "validationRule": null,
              },
            ]
          }
          responses={Array []}
        />
        <Field
          component={[Function]}
          id="proposal_media"
          image=""
          label={
            <span>
              <FormattedMessage
                id="proposal.media"
                values={Object {}}
              />
              <span
                className="excerpt"
              >
                 
                <FormattedMessage
                  id="global.optional"
                  values={Object {}}
                />
              </span>
            </span>
          }
          name="media"
          type="image"
        />
      </div>
    </div>
    <ProposalAdminContentForm__ExternaLinksCard
      backgroundColor="#ffffff"
      mt={6}
      paddingY={8}
    >
      <Heading
        as="h3"
        color="#003670"
        fontSize="18px"
        fontWeight="600"
        lineHeight="24px"
      >
        <FormattedMessage
          id="external-links"
          values={Object {}}
        />
      </Heading>
      <Field
        component={[Function]}
        id="proposal_wep_page"
        label={
          <FormattedMessage
            id="form.label_website"
            values={Object {}}
          />
        }
        name="webPageUrl"
        placeholder="your-url"
        type="text"
      />
      <Field
        component={[Function]}
        id="proposal_twitter"
        label={
          <FormattedMessage
            id="share.twitter"
            values={Object {}}
          />
        }
        name="twitterUrl"
        placeholder="https://twitter.com/pseudo"
        type="text"
      />
      <Field
        component={[Function]}
        id="proposal_facebook"
        label={
          <FormattedMessage
            id="share.facebook"
            values={Object {}}
          />
        }
        name="facebookUrl"
        placeholder="https://facebook.com/pseudo"
        type="text"
      />
      <Field
        component={[Function]}
        id="proposal_instagram"
        label={
          <FormattedMessage
            id="instagram"
            values={Object {}}
          />
        }
        name="instagramUrl"
        placeholder="https://instagram.com/pseudo"
        type="text"
      />
      <Field
        component={[Function]}
        id="proposal_linkedin"
        label={
          <FormattedMessage
            id="share.linkedin"
            values={Object {}}
          />
        }
        name="linkedInUrl"
        placeholder="https://linkedin.com/in/pseudo"
        type="text"
      />
      <Field
        component={[Function]}
        id="proposal_youtube"
        label={
          <FormattedMessage
            id="youtube"
            values={Object {}}
          />
        }
        name="youtubeUrl"
        placeholder="https://youtube.com/channel/pseudo"
        type="text"
      />
    </ProposalAdminContentForm__ExternaLinksCard>
    <ForwardRef
      direction="row"
      mb={24}
      mt={24}
      spacing={24}
    >
      <ProposalAdminContentForm__NotationCard
        backgroundColor="white"
        flex="1"
        px={24}
      >
        <ForwardRef
          spacing="9px"
        >
          <Text
            as="h3"
            color="#003670"
            fontSize="18px"
            fontWeight="600"
            lineHeight="24px"
            margin="0"
          >
            <FormattedMessage
              id="proposal.estimation"
              values={Object {}}
            />
          </Text>
          <a
            className="link"
            href="admin.help.link.proposal.estimation"
            rel="noopener noreferrer"
            style={
              Object {
                "marginTop": 3,
              }
            }
            target="_blank"
          >
            <Icon
              color="#3b88fd"
              name="information"
              size={14}
            />
          </a>
        </ForwardRef>
        <ForwardRef
          mb="24px"
          mt="8px"
        >
          <AppBox
            ml={0}
          >
            <Text
              as="div"
              color="#85919D"
              fontSize="13px"
              fontWeight="normal"
              lineHeight="16px"
              maxWidth="450px"
            >
              <FormattedMessage
                id="estimation-help-text-2"
                values={Object {}}
              />
            </Text>
            <Field
              addonBefore={
                <Glyphicon
                  bsClass="glyphicon"
                  glyph="euro"
                />
              }
              className="mt-24 mb-24"
              component={[Function]}
              id="proposal_estimation"
              label={
                <FormattedMessage
                  id="cost"
                  values={Object {}}
                />
              }
              labelClassName="mb-5"
              name="estimation"
              normalize={[Function]}
              placeholder="estimation-placeholder"
              type="number"
            />
          </AppBox>
        </ForwardRef>
      </ProposalAdminContentForm__NotationCard>
      <ProposalAdminContentForm__NotationCard
        backgroundColor="white"
        flex="1"
        px={24}
      >
        <ForwardRef
          spacing="9px"
        >
          <Text
            as="h3"
            color="#003670"
            fontSize="18px"
            fontWeight="600"
            lineHeight="24px"
            margin="0"
          >
            <FormattedMessage
              id="admin.fields.proposal.likers"
              values={Object {}}
            />
          </Text>
          <a
            className="link"
            href="admin.help.link.proposal.heart"
            rel="noopener noreferrer"
            style={
              Object {
                "marginTop": 3,
              }
            }
            target="_blank"
          >
            <Icon
              color="#3b88fd"
              name="information"
              size={14}
            />
          </a>
        </ForwardRef>
        <AppBox
          color="#85919D"
          fontSize="13px"
          fontWeight="normal"
          lineHeight="16px"
          maxWidth="450px"
          mt="8px"
        >
          <FormattedMessage
            id="likers-helpText"
            values={Object {}}
          />
        </AppBox>
        <UserListField
          ariaControls="ProposalAdminNotationForm-filter-user-listbox"
          authorOfEvent={false}
          autoload={false}
          blockClassName="likers-fields"
          className=""
          clearable={false}
          debounce={false}
          id="likers"
          inputClassName="fake-inputClassName"
          label={
            <FormattedMessage
              id="admin.fields.event_registration.user"
              values={Object {}}
            />
          }
          labelClassName="mt-0 mb-5"
          multi={true}
          name="likers"
          noOptionsMessage="no_result"
          placeholder="select-users"
        />
      </ProposalAdminContentForm__NotationCard>
    </ForwardRef>
    <ButtonToolbar
      bsClass="btn-toolbar"
      className="box-content__toolbar"
    >
      <Connect(SubmitButton)
        bsStyle="primary"
        disabled={true}
        id="proposal_admin_content_save"
        label="global.save"
        onSubmit={[Function]}
        type="submit"
      />
      <AlertForm
        invalid={false}
        submitFailed={false}
        submitSucceeded={false}
        submitting={false}
        valid={true}
      />
    </ButtonToolbar>
  </form>
</Fragment>
`;

exports[`<ProposalAdminContentForm /> render correctly with proposals revisions feature enabled 1`] = `
<Fragment>
  <Relay(Connect(ProposalFusionEditModal))
    onClose={[Function]}
    proposal={
      Object {
        " $fragmentRefs": null,
        " $refType": null,
        "address": null,
        "author": Object {
          "displayName": "Author",
          "id": "1",
        },
        "body": "body",
        "category": Object {
          "id": "1",
        },
        "decision": Object {
          "estimatedCost": null,
          "state": "IN_PROGRESS",
        },
        "district": Object {
          "id": "1",
        },
        "estimation": 1000,
        "facebookUrl": "https://facebook.com",
        "form": Object {
          "adminUrl": "http://capco.dev/pfrom",
          "analysisConfiguration": Object {
            "costEstimationEnabled": false,
            "isImmediatelyEffective": false,
          },
          "categories": Array [
            Object {
              "id": "1",
              "name": "category-1",
            },
            Object {
              "id": "2",
              "name": "category-2",
            },
          ],
          "categoryMandatory": true,
          "descriptionMandatory": true,
          "districtMandatory": true,
          "districts": Array [],
          "id": "form1",
          "isUsingAnySocialNetworks": true,
          "questions": Array [
            Object {
              "__typename": "SimpleQuestion",
              "alwaysJumpDestinationQuestion": null,
              "choices": Object {
                "edges": Array [],
                "pageInfo": Object {
                  "hasNextPage": false,
                },
                "totalCount": 0,
              },
              "description": null,
              "descriptionUsingJoditWysiwyg": false,
              "destinationJumps": Array [],
              "helpText": "Help 1",
              "hidden": false,
              "id": "1",
              "isOtherAllowed": false,
              "jumps": Array [],
              "level": 0,
              "number": 1,
              "position": 0,
              "private": false,
              "required": true,
              "title": "title",
              "type": "text",
              "validationRule": null,
            },
          ],
          "themeMandatory": true,
          "usingAddress": true,
          "usingCategories": true,
          "usingDescription": true,
          "usingDistrict": true,
          "usingFacebook": true,
          "usingInstagram": true,
          "usingLinkedIn": true,
          "usingSummary": true,
          "usingThemes": true,
          "usingTwitter": true,
          "usingWebPage": true,
          "usingYoutube": true,
        },
        "id": "1",
        "instagramUrl": "https://instagram.com",
        "likers": Array [
          Object {
            "displayName": "liker-1",
            "id": "1",
          },
        ],
        "linkedInUrl": "https://linkedin.com",
        "media": Object {
          "id": "1",
          "url": "",
        },
        "mergedFrom": Array [
          Object {
            "adminUrl": "http://capco.dev/child1",
            "id": "1",
            "title": "Child 1",
          },
          Object {
            "adminUrl": "http://capco.dev/child2",
            "id": "2",
            "title": "Child 2",
          },
        ],
        "mergedIn": Array [],
        "publicationStatus": "DRAFT",
        "responses": Array [
          Object {
            "question": Object {
              "id": "1",
            },
            "value": "value-1",
          },
          Object {
            "medias": Array [
              Object {
                "id": "1",
                "name": "media-1",
                "size": "100",
                "url": "",
              },
            ],
            "question": Object {
              "id": "2",
            },
          },
        ],
        "summary": "summary",
        "theme": Object {
          "id": "theme-1",
        },
        "title": "title-1",
        "twitterUrl": "https://twitter.com",
        "webPageUrl": "",
        "youtubeUrl": "",
      }
    }
    show={false}
  />
  <form
    onSubmit={[MockFunction]}
  >
    <div
      className="box box-primary container-fluide"
    >
      <div
        className="box-header"
      >
        <h3
          className="box-title"
        >
          <FormattedMessage
            id="global.contenu"
            values={Object {}}
          />
        </h3>
        <a
          className="pull-right link"
          href="admin.help.link.proposal.body"
          rel="noopener noreferrer"
          target="_blank"
        >
          <i
            className="fa fa-info-circle"
          />
          global.help
        </a>
      </div>
      <div
        className="box-content box-content__content-form"
      >
        <Field
          component={[Function]}
          id="proposal_title"
          label={
            <FormattedMessage
              id="proposal.title"
              values={Object {}}
            />
          }
          name="title"
          type="text"
        />
        <Field
          component={[Function]}
          id="global.summary"
          label={
            <span>
              <FormattedMessage
                id="global.summary"
                values={Object {}}
              />
              <span
                className="excerpt"
              >
                 
                <FormattedMessage
                  id="global.optional"
                  values={Object {}}
                />
              </span>
            </span>
          }
          name="summary"
          type="textarea"
        />
        <UserListField
          ariaControls="ProposalAdminContentForm-filter-user-listbox"
          authorOfEvent={false}
          autoload={false}
          className=""
          clearable={false}
          debounce={false}
          disabled={false}
          id="proposal-admin-author"
          inputClassName="fake-inputClassName"
          label={
            <FormattedMessage
              id="global.author"
              values={Object {}}
            />
          }
          labelClassName="control-label"
          multi={false}
          name="author"
          placeholder="global.author"
          selectFieldIsObject={true}
        />
        <Field
          component={[Function]}
          id="global.category"
          label={
            <span>
              <FormattedMessage
                id="global.category"
                values={Object {}}
              />
            </span>
          }
          name="category"
          type="select"
        >
          <FormattedMessage
            id="proposal.select.category"
            values={Object {}}
          >
            <Component />
          </FormattedMessage>
          <option
            key="1"
            value="1"
          >
            category-1
          </option>
          <option
            key="2"
            value="2"
          >
            category-2
          </option>
        </Field>
        <Field
          addressProps={
            Object {
              "getAddress": [Function],
            }
          }
          component={[Function]}
          formName="proposal-admin-edit"
          id="proposal_address"
          label={
            <FormattedMessage
              id="proposal_form.address"
              values={Object {}}
            />
          }
          name="addressText"
          placeholder="proposal.map.form.placeholder"
          type="address"
        />
        <Field
          component={[Function]}
          id="proposal_body"
          label={
            <FormattedMessage
              id="proposal.body"
              values={Object {}}
            />
          }
          name="body"
          type="editor"
        />
        <FieldArray
          change={[MockFunction]}
          component={[Function]}
          form="proposal-admin-edit"
          intl={
            Object {
              "formatDate": [Function],
              "formatHTMLMessage": [Function],
              "formatMessage": [Function],
              "formatNumber": [Function],
              "formatPlural": [Function],
              "formatRelative": [Function],
              "formatTime": [Function],
              "formats": Object {},
              "locale": "fr-FR",
              "messages": Object {},
              "now": [Function],
            }
          }
          memoize={[Function]}
          name="responses"
          questions={
            Array [
              Object {
                "__typename": "SimpleQuestion",
                "alwaysJumpDestinationQuestion": null,
                "choices": Object {
                  "edges": Array [],
                  "pageInfo": Object {
                    "hasNextPage": false,
                  },
                  "totalCount": 0,
                },
                "description": null,
                "descriptionUsingJoditWysiwyg": false,
                "destinationJumps": Array [],
                "helpText": "Help 1",
                "hidden": false,
                "id": "1",
                "isOtherAllowed": false,
                "jumps": Array [],
                "level": 0,
                "number": 1,
                "position": 0,
                "private": false,
                "required": true,
                "title": "title",
                "type": "text",
                "validationRule": null,
              },
            ]
          }
          responses={Array []}
        />
        <Field
          component={[Function]}
          id="proposal_media"
          image=""
          label={
            <span>
              <FormattedMessage
                id="proposal.media"
                values={Object {}}
              />
              <span
                className="excerpt"
              >
                 
                <FormattedMessage
                  id="global.optional"
                  values={Object {}}
                />
              </span>
            </span>
          }
          name="media"
          type="image"
        />
      </div>
    </div>
    <ProposalAdminContentForm__ExternaLinksCard
      backgroundColor="#ffffff"
      mt={6}
      paddingY={8}
    >
      <Heading
        as="h3"
        color="#003670"
        fontSize="18px"
        fontWeight="600"
        lineHeight="24px"
      >
        <FormattedMessage
          id="external-links"
          values={Object {}}
        />
      </Heading>
      <Field
        component={[Function]}
        id="proposal_wep_page"
        label={
          <FormattedMessage
            id="form.label_website"
            values={Object {}}
          />
        }
        name="webPageUrl"
        placeholder="your-url"
        type="text"
      />
      <Field
        component={[Function]}
        id="proposal_twitter"
        label={
          <FormattedMessage
            id="share.twitter"
            values={Object {}}
          />
        }
        name="twitterUrl"
        placeholder="https://twitter.com/pseudo"
        type="text"
      />
      <Field
        component={[Function]}
        id="proposal_facebook"
        label={
          <FormattedMessage
            id="share.facebook"
            values={Object {}}
          />
        }
        name="facebookUrl"
        placeholder="https://facebook.com/pseudo"
        type="text"
      />
      <Field
        component={[Function]}
        id="proposal_instagram"
        label={
          <FormattedMessage
            id="instagram"
            values={Object {}}
          />
        }
        name="instagramUrl"
        placeholder="https://instagram.com/pseudo"
        type="text"
      />
      <Field
        component={[Function]}
        id="proposal_linkedin"
        label={
          <FormattedMessage
            id="share.linkedin"
            values={Object {}}
          />
        }
        name="linkedInUrl"
        placeholder="https://linkedin.com/in/pseudo"
        type="text"
      />
      <Field
        component={[Function]}
        id="proposal_youtube"
        label={
          <FormattedMessage
            id="youtube"
            values={Object {}}
          />
        }
        name="youtubeUrl"
        placeholder="https://youtube.com/channel/pseudo"
        type="text"
      />
    </ProposalAdminContentForm__ExternaLinksCard>
    <ForwardRef
      direction="row"
      mb={24}
      mt={24}
      spacing={24}
    >
      <ProposalAdminContentForm__NotationCard
        backgroundColor="white"
        flex="1"
        px={24}
      >
        <ForwardRef
          spacing="9px"
        >
          <Text
            as="h3"
            color="#003670"
            fontSize="18px"
            fontWeight="600"
            lineHeight="24px"
            margin="0"
          >
            <FormattedMessage
              id="proposal.estimation"
              values={Object {}}
            />
          </Text>
          <a
            className="link"
            href="admin.help.link.proposal.estimation"
            rel="noopener noreferrer"
            style={
              Object {
                "marginTop": 3,
              }
            }
            target="_blank"
          >
            <Icon
              color="#3b88fd"
              name="information"
              size={14}
            />
          </a>
        </ForwardRef>
        <ForwardRef
          mb="24px"
          mt="8px"
        >
          <AppBox
            ml={0}
          >
            <Text
              as="div"
              color="#85919D"
              fontSize="13px"
              fontWeight="normal"
              lineHeight="16px"
              maxWidth="450px"
            >
              <FormattedMessage
                id="estimation-help-text-2"
                values={Object {}}
              />
            </Text>
            <Field
              addonBefore={
                <Glyphicon
                  bsClass="glyphicon"
                  glyph="euro"
                />
              }
              className="mt-24 mb-24"
              component={[Function]}
              id="proposal_estimation"
              label={
                <FormattedMessage
                  id="cost"
                  values={Object {}}
                />
              }
              labelClassName="mb-5"
              name="estimation"
              normalize={[Function]}
              placeholder="estimation-placeholder"
              type="number"
            />
          </AppBox>
        </ForwardRef>
      </ProposalAdminContentForm__NotationCard>
      <ProposalAdminContentForm__NotationCard
        backgroundColor="white"
        flex="1"
        px={24}
      >
        <ForwardRef
          spacing="9px"
        >
          <Text
            as="h3"
            color="#003670"
            fontSize="18px"
            fontWeight="600"
            lineHeight="24px"
            margin="0"
          >
            <FormattedMessage
              id="admin.fields.proposal.likers"
              values={Object {}}
            />
          </Text>
          <a
            className="link"
            href="admin.help.link.proposal.heart"
            rel="noopener noreferrer"
            style={
              Object {
                "marginTop": 3,
              }
            }
            target="_blank"
          >
            <Icon
              color="#3b88fd"
              name="information"
              size={14}
            />
          </a>
        </ForwardRef>
        <AppBox
          color="#85919D"
          fontSize="13px"
          fontWeight="normal"
          lineHeight="16px"
          maxWidth="450px"
          mt="8px"
        >
          <FormattedMessage
            id="likers-helpText"
            values={Object {}}
          />
        </AppBox>
        <UserListField
          ariaControls="ProposalAdminNotationForm-filter-user-listbox"
          authorOfEvent={false}
          autoload={false}
          blockClassName="likers-fields"
          className=""
          clearable={false}
          debounce={false}
          id="likers"
          inputClassName="fake-inputClassName"
          label={
            <FormattedMessage
              id="admin.fields.event_registration.user"
              values={Object {}}
            />
          }
          labelClassName="mt-0 mb-5"
          multi={true}
          name="likers"
          noOptionsMessage="no_result"
          placeholder="select-users"
        />
      </ProposalAdminContentForm__NotationCard>
    </ForwardRef>
    <ButtonToolbar
      bsClass="btn-toolbar"
      className="box-content__toolbar"
    >
      <Connect(SubmitButton)
        bsStyle="primary"
        disabled={true}
        id="proposal_admin_content_save"
        label="global.save"
        onSubmit={[Function]}
        type="submit"
      />
      <ProposalRevision
        isAdminView={true}
        proposal={
          Object {
            " $fragmentRefs": null,
            " $refType": null,
            "address": null,
            "author": Object {
              "displayName": "Author",
              "id": "1",
            },
            "body": "body",
            "category": Object {
              "id": "1",
            },
            "decision": Object {
              "estimatedCost": null,
              "state": "IN_PROGRESS",
            },
            "district": Object {
              "id": "1",
            },
            "estimation": 1000,
            "facebookUrl": "https://facebook.com",
            "form": Object {
              "adminUrl": "http://capco.dev/pfrom",
              "analysisConfiguration": Object {
                "costEstimationEnabled": false,
                "isImmediatelyEffective": false,
              },
              "categories": Array [
                Object {
                  "id": "1",
                  "name": "category-1",
                },
                Object {
                  "id": "2",
                  "name": "category-2",
                },
              ],
              "categoryMandatory": true,
              "descriptionMandatory": true,
              "districtMandatory": true,
              "districts": Array [],
              "id": "form1",
              "isUsingAnySocialNetworks": true,
              "questions": Array [
                Object {
                  "__typename": "SimpleQuestion",
                  "alwaysJumpDestinationQuestion": null,
                  "choices": Object {
                    "edges": Array [],
                    "pageInfo": Object {
                      "hasNextPage": false,
                    },
                    "totalCount": 0,
                  },
                  "description": null,
                  "descriptionUsingJoditWysiwyg": false,
                  "destinationJumps": Array [],
                  "helpText": "Help 1",
                  "hidden": false,
                  "id": "1",
                  "isOtherAllowed": false,
                  "jumps": Array [],
                  "level": 0,
                  "number": 1,
                  "position": 0,
                  "private": false,
                  "required": true,
                  "title": "title",
                  "type": "text",
                  "validationRule": null,
                },
              ],
              "themeMandatory": true,
              "usingAddress": true,
              "usingCategories": true,
              "usingDescription": true,
              "usingDistrict": true,
              "usingFacebook": true,
              "usingInstagram": true,
              "usingLinkedIn": true,
              "usingSummary": true,
              "usingThemes": true,
              "usingTwitter": true,
              "usingWebPage": true,
              "usingYoutube": true,
            },
            "id": "1",
            "instagramUrl": "https://instagram.com",
            "likers": Array [
              Object {
                "displayName": "liker-1",
                "id": "1",
              },
            ],
            "linkedInUrl": "https://linkedin.com",
            "media": Object {
              "id": "1",
              "url": "",
            },
            "mergedFrom": Array [
              Object {
                "adminUrl": "http://capco.dev/child1",
                "id": "1",
                "title": "Child 1",
              },
              Object {
                "adminUrl": "http://capco.dev/child2",
                "id": "2",
                "title": "Child 2",
              },
            ],
            "mergedIn": Array [],
            "publicationStatus": "DRAFT",
            "responses": Array [
              Object {
                "question": Object {
                  "id": "1",
                },
                "value": "value-1",
              },
              Object {
                "medias": Array [
                  Object {
                    "id": "1",
                    "name": "media-1",
                    "size": "100",
                    "url": "",
                  },
                ],
                "question": Object {
                  "id": "2",
                },
              },
            ],
            "summary": "summary",
            "theme": Object {
              "id": "theme-1",
            },
            "title": "title-1",
            "twitterUrl": "https://twitter.com",
            "webPageUrl": "",
            "youtubeUrl": "",
          }
        }
      >
        <Component />
      </ProposalRevision>
      <AlertForm
        invalid={false}
        submitFailed={false}
        submitSucceeded={false}
        submitting={false}
        valid={true}
      />
    </ButtonToolbar>
  </form>
</Fragment>
`;
