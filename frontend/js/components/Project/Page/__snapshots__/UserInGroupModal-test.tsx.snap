// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<UserInGroupModal /> should render correctly with user in 2 groups 1`] = `
Array [
  <div
    className="sc-bcXGCL klhoji toasts-container toasts-container--top"
  />,
  <div
    className="sc-bcXGCL cUzULY toasts-container toasts-container--top-left"
  />,
  <div
    className="sc-bcXGCL gbiIcr toasts-container toasts-container--top-right"
  />,
  <div
    className="sc-bcXGCL iAUFHT toasts-container toasts-container--bottom"
  />,
  <div
    className="sc-bcXGCL egFGdF toasts-container toasts-container--bottom-left"
  />,
  <div
    className="sc-bcXGCL iXsWAS toasts-container toasts-container--bottom-right"
  />,
  <div
    aria-label="people-with-access-to-project"
    aria-modal={true}
    data-dialog={true}
    hidden={false}
    id="<Node-mock-id-1>-modal"
    onAnimationEnd={[Function]}
    onBlur={[Function]}
    onKeyDown={[Function]}
    onTransitionEnd={[Function]}
    role="dialog"
    tabIndex={-1}
  >
    <div
      data-testid="AnimatePresence"
    >
      <div
        className="sc-bcXGCL kkunZo sc-gsGkXq cap-modal__overlay"
        onClick={[Function]}
      >
        <div
          className="sc-bcXGCL eSCgdK sc-bWOFNj GFNVU cap-modal"
          id="<Node-mock-id-1>-modal"
        >
          <div
            className="ResetCss-jmWVRh exBVVd"
          >
            <header
              className="sc-bcXGCL MfvHV cap-modal__header"
            >
              <div
                className="sc-bcXGCL jGtgIo"
              >
                <h2
                  className="sc-bcXGCL ggqhBm cap-heading"
                  id="contained-modal-title-lg"
                  style={
                    Object {
                      "marginLeft": 0,
                      "marginTop": 0,
                    }
                  }
                >
                  &lt;mock-value-for-field-"title"&gt;
                </h2>
              </div>
              <button
                className="sc-bcXGCL kvTszR"
                onClick={[Function]}
                type="button"
              >
                <svg
                  className="sc-bcXGCL sc-eJDTud diAjQP iYOzKe cap-icon"
                  fill="none"
                  viewBox="0 0 12 12"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M1 11L11 1M1 1l10 10"
                    stroke="currentColor"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={0.8}
                  />
                </svg>
              </button>
            </header>
          </div>
          <main
            className="sc-bcXGCL eowUbB cap-modal__body"
          >
            <ul
              className="ListGroupFlush__Container-eGHZgt cEkgdF list-group-flush list-group"
              striped={false}
            >
              <li
                className="d-flex text-left list-group-item"
                id="<User-mock-id-2>"
              >
                <span
                  className="UserAvatar__UserAvatarContainer-jxoNlw kVUpxv"
                  hasBadge={false}
                  onBlur={[Function]}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                  style={Object {}}
                >
                  <img
                    alt="<mock-value-for-field-\\"username\\">"
                    className="sc-breQAM img-circle object-cover user-avatar mr-10 "
                    loading="lazy"
                    sizes="(max-width: 320px) 320px, (max-width: 640px) 640px, (max-width: 960px) 960px, (max-width: 1280px) 1280px, (max-width: 2560px) 2560px,"
                    srcSet="
        http://localhost/cdn-cgi/image/width=320,format=auto/<mock-value-for-field-\\"url\\">   320w,
         http://localhost/cdn-cgi/image/width=640,format=auto/<mock-value-for-field-\\"url\\">   640w,
         http://localhost/cdn-cgi/image/width=960,format=auto/<mock-value-for-field-\\"url\\">   960w,
         http://localhost/cdn-cgi/image/width=1280,format=auto/<mock-value-for-field-\\"url\\"> 1280w,
         http://localhost/cdn-cgi/image/width=2560,format=auto/<mock-value-for-field-\\"url\\"> 2560w,
         http://localhost/cdn-cgi/image/dpr=2,format=auto/<mock-value-for-field-\\"url\\"> 2x,
         http://localhost/cdn-cgi/image/dpr=3,format=auto/<mock-value-for-field-\\"url\\"> 3x,
         "
                    style={
                      Object {
                        "height": "45px",
                        "width": "45px",
                      }
                    }
                  />
                </span>
                <a
                  className="align-self-center"
                  href="<mock-value-for-field-\\"url\\">"
                  title="usernames-profile"
                >
                  &lt;mock-value-for-field-"username"&gt;
                </a>
              </li>
            </ul>
          </main>
          <footer
            className="sc-bcXGCL ibPPgn cap-modal__footer"
          >
            <button
              className="sc-bcXGCL sc-laZSpB hUhKMG eMqMcb cap-button"
              onClick={[MockFunction]}
              style={
                Object {
                  "marginLeft": 0,
                  "marginTop": 0,
                }
              }
              type="button"
            >
              global.close
            </button>
          </footer>
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`<UserInGroupModal /> should render correctly with user in load more 1`] = `
Array [
  <div
    className="sc-bcXGCL klhoji toasts-container toasts-container--top"
  />,
  <div
    className="sc-bcXGCL cUzULY toasts-container toasts-container--top-left"
  />,
  <div
    className="sc-bcXGCL gbiIcr toasts-container toasts-container--top-right"
  />,
  <div
    className="sc-bcXGCL iAUFHT toasts-container toasts-container--bottom"
  />,
  <div
    className="sc-bcXGCL egFGdF toasts-container toasts-container--bottom-left"
  />,
  <div
    className="sc-bcXGCL iXsWAS toasts-container toasts-container--bottom-right"
  />,
  <div
    aria-label="people-with-access-to-project"
    aria-modal={true}
    data-dialog={true}
    hidden={false}
    id="<Node-mock-id-1>-modal"
    onAnimationEnd={[Function]}
    onBlur={[Function]}
    onKeyDown={[Function]}
    onTransitionEnd={[Function]}
    role="dialog"
    tabIndex={-1}
  >
    <div
      data-testid="AnimatePresence"
    >
      <div
        className="sc-bcXGCL kkunZo sc-gsGkXq cap-modal__overlay"
        onClick={[Function]}
      >
        <div
          className="sc-bcXGCL eSCgdK sc-bWOFNj GFNVU cap-modal"
          id="<Node-mock-id-1>-modal"
        >
          <div
            className="ResetCss-jmWVRh exBVVd"
          >
            <header
              className="sc-bcXGCL MfvHV cap-modal__header"
            >
              <div
                className="sc-bcXGCL jGtgIo"
              >
                <h2
                  className="sc-bcXGCL ggqhBm cap-heading"
                  id="contained-modal-title-lg"
                  style={
                    Object {
                      "marginLeft": 0,
                      "marginTop": 0,
                    }
                  }
                >
                  &lt;mock-value-for-field-"title"&gt;
                </h2>
              </div>
              <button
                className="sc-bcXGCL kvTszR"
                onClick={[Function]}
                type="button"
              >
                <svg
                  className="sc-bcXGCL sc-eJDTud diAjQP iYOzKe cap-icon"
                  fill="none"
                  viewBox="0 0 12 12"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M1 11L11 1M1 1l10 10"
                    stroke="currentColor"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={0.8}
                  />
                </svg>
              </button>
            </header>
          </div>
          <main
            className="sc-bcXGCL eowUbB cap-modal__body"
          >
            <ul
              className="ListGroupFlush__Container-eGHZgt cEkgdF list-group-flush list-group"
              striped={false}
            >
              <li
                className="d-flex text-left list-group-item"
                id="<User-mock-id-2>"
              >
                <span
                  className="UserAvatar__UserAvatarContainer-jxoNlw kVUpxv"
                  hasBadge={false}
                  onBlur={[Function]}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                  style={Object {}}
                >
                  <img
                    alt="<mock-value-for-field-\\"username\\">"
                    className="sc-breQAM img-circle object-cover user-avatar mr-10 "
                    loading="lazy"
                    sizes="(max-width: 320px) 320px, (max-width: 640px) 640px, (max-width: 960px) 960px, (max-width: 1280px) 1280px, (max-width: 2560px) 2560px,"
                    srcSet="
        http://localhost/cdn-cgi/image/width=320,format=auto/<mock-value-for-field-\\"url\\">   320w,
         http://localhost/cdn-cgi/image/width=640,format=auto/<mock-value-for-field-\\"url\\">   640w,
         http://localhost/cdn-cgi/image/width=960,format=auto/<mock-value-for-field-\\"url\\">   960w,
         http://localhost/cdn-cgi/image/width=1280,format=auto/<mock-value-for-field-\\"url\\"> 1280w,
         http://localhost/cdn-cgi/image/width=2560,format=auto/<mock-value-for-field-\\"url\\"> 2560w,
         http://localhost/cdn-cgi/image/dpr=2,format=auto/<mock-value-for-field-\\"url\\"> 2x,
         http://localhost/cdn-cgi/image/dpr=3,format=auto/<mock-value-for-field-\\"url\\"> 3x,
         "
                    style={
                      Object {
                        "height": "45px",
                        "width": "45px",
                      }
                    }
                  />
                </span>
                <a
                  className="align-self-center"
                  href="<mock-value-for-field-\\"url\\">"
                  title="usernames-profile"
                >
                  &lt;mock-value-for-field-"username"&gt;
                </a>
              </li>
            </ul>
          </main>
          <footer
            className="sc-bcXGCL ibPPgn cap-modal__footer"
          >
            <button
              className="sc-bcXGCL sc-laZSpB hUhKMG eMqMcb cap-button"
              onClick={[MockFunction]}
              style={
                Object {
                  "marginLeft": 0,
                  "marginTop": 0,
                }
              }
              type="button"
            >
              global.close
            </button>
          </footer>
        </div>
      </div>
    </div>
  </div>,
]
`;

exports[`<UserInGroupModal /> should render correctly without user in group 1`] = `
Array [
  <div
    className="sc-bcXGCL klhoji toasts-container toasts-container--top"
  />,
  <div
    className="sc-bcXGCL cUzULY toasts-container toasts-container--top-left"
  />,
  <div
    className="sc-bcXGCL gbiIcr toasts-container toasts-container--top-right"
  />,
  <div
    className="sc-bcXGCL iAUFHT toasts-container toasts-container--bottom"
  />,
  <div
    className="sc-bcXGCL egFGdF toasts-container toasts-container--bottom-left"
  />,
  <div
    className="sc-bcXGCL iXsWAS toasts-container toasts-container--bottom-right"
  />,
  <div
    aria-label="people-with-access-to-project"
    aria-modal={true}
    data-dialog={true}
    hidden={false}
    id="<Node-mock-id-1>-modal"
    onAnimationEnd={[Function]}
    onBlur={[Function]}
    onKeyDown={[Function]}
    onTransitionEnd={[Function]}
    role="dialog"
    tabIndex={-1}
  >
    <div
      data-testid="AnimatePresence"
    >
      <div
        className="sc-bcXGCL kkunZo sc-gsGkXq cap-modal__overlay"
        onClick={[Function]}
      >
        <div
          className="sc-bcXGCL eSCgdK sc-bWOFNj GFNVU cap-modal"
          id="<Node-mock-id-1>-modal"
        >
          <div
            className="ResetCss-jmWVRh exBVVd"
          >
            <header
              className="sc-bcXGCL MfvHV cap-modal__header"
            >
              <div
                className="sc-bcXGCL jGtgIo"
              >
                <h2
                  className="sc-bcXGCL ggqhBm cap-heading"
                  id="contained-modal-title-lg"
                  style={
                    Object {
                      "marginLeft": 0,
                      "marginTop": 0,
                    }
                  }
                >
                  &lt;mock-value-for-field-"title"&gt;
                </h2>
              </div>
              <button
                className="sc-bcXGCL kvTszR"
                onClick={[Function]}
                type="button"
              >
                <svg
                  className="sc-bcXGCL sc-eJDTud diAjQP iYOzKe cap-icon"
                  fill="none"
                  viewBox="0 0 12 12"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M1 11L11 1M1 1l10 10"
                    stroke="currentColor"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={0.8}
                  />
                </svg>
              </button>
            </header>
          </div>
          <main
            className="sc-bcXGCL eowUbB cap-modal__body"
          >
            <ul
              className="ListGroupFlush__Container-eGHZgt cEkgdF list-group-flush list-group"
              striped={false}
            >
              <li
                className="d-flex text-left list-group-item"
                id="<User-mock-id-2>"
              >
                <span
                  className="UserAvatar__UserAvatarContainer-jxoNlw kVUpxv"
                  hasBadge={false}
                  onBlur={[Function]}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                  style={Object {}}
                >
                  <img
                    alt="<mock-value-for-field-\\"username\\">"
                    className="sc-breQAM img-circle object-cover user-avatar mr-10 "
                    loading="lazy"
                    sizes="(max-width: 320px) 320px, (max-width: 640px) 640px, (max-width: 960px) 960px, (max-width: 1280px) 1280px, (max-width: 2560px) 2560px,"
                    srcSet="
        http://localhost/cdn-cgi/image/width=320,format=auto/<mock-value-for-field-\\"url\\">   320w,
         http://localhost/cdn-cgi/image/width=640,format=auto/<mock-value-for-field-\\"url\\">   640w,
         http://localhost/cdn-cgi/image/width=960,format=auto/<mock-value-for-field-\\"url\\">   960w,
         http://localhost/cdn-cgi/image/width=1280,format=auto/<mock-value-for-field-\\"url\\"> 1280w,
         http://localhost/cdn-cgi/image/width=2560,format=auto/<mock-value-for-field-\\"url\\"> 2560w,
         http://localhost/cdn-cgi/image/dpr=2,format=auto/<mock-value-for-field-\\"url\\"> 2x,
         http://localhost/cdn-cgi/image/dpr=3,format=auto/<mock-value-for-field-\\"url\\"> 3x,
         "
                    style={
                      Object {
                        "height": "45px",
                        "width": "45px",
                      }
                    }
                  />
                </span>
                <a
                  className="align-self-center"
                  href="<mock-value-for-field-\\"url\\">"
                  title="usernames-profile"
                >
                  &lt;mock-value-for-field-"username"&gt;
                </a>
              </li>
            </ul>
          </main>
          <footer
            className="sc-bcXGCL ibPPgn cap-modal__footer"
          >
            <button
              className="sc-bcXGCL sc-laZSpB hUhKMG eMqMcb cap-button"
              onClick={[MockFunction]}
              style={
                Object {
                  "marginLeft": 0,
                  "marginTop": 0,
                }
              }
              type="button"
            >
              global.close
            </button>
          </footer>
        </div>
      </div>
    </div>
  </div>,
]
`;
