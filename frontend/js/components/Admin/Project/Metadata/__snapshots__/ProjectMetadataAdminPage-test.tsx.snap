// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProjectMetadataAdminPage /> renders correctly 1`] = `
<div
  className="col-md-6"
>
  <div
    className="box box-primary container-fluid"
  >
    <div
      className="box-header"
    >
      <h4
        className="box-title"
      >
        <FormattedMessage
          id="admin.fields.project.group_meta"
          values={Object {}}
        />
      </h4>
    </div>
    <div
      className="box-content"
    >
      <Relay(injectIntl(Connect(ProjectMetadataAdminForm)))
        anyTouched={false}
        array={
          Object {
            "insert": [MockFunction],
            "move": [MockFunction],
            "pop": [MockFunction],
            "push": [MockFunction],
            "remove": [MockFunction],
            "removeAll": [MockFunction],
            "shift": [MockFunction],
            "splice": [MockFunction],
            "swap": [MockFunction],
            "unshift": [MockFunction],
          }
        }
        asyncValidate={[MockFunction]}
        asyncValidating={false}
        autofill={[MockFunction]}
        blur={[MockFunction]}
        change={[MockFunction]}
        clearAsyncError={[MockFunction]}
        clearSubmit={[MockFunction]}
        destroy={[MockFunction]}
        dirty={false}
        dispatch={[MockFunction]}
        error={null}
        form="formName"
        formName="form"
        handleSubmit={[MockFunction]}
        initialize={[MockFunction]}
        initialized={true}
        intl={
          Object {
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "locale": "fr-FR",
            "messages": Object {},
            "now": [Function],
          }
        }
        invalid={false}
        pristine={true}
        project={null}
        reset={[MockFunction]}
        submitFailed={false}
        submitSucceeded={false}
        submitting={false}
        touch={[MockFunction]}
        untouch={[MockFunction]}
        updateSyncErrors={[MockFunction]}
        valid={true}
        warning={null}
      />
    </div>
  </div>
</div>
`;
