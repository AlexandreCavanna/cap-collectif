// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProjectAdminConsultationStepForm /> renders correctly with data 1`] = `
<Fragment>
  <ProjectAdminFormstyle__ProjectBoxHeader>
    <h5>
      <FormattedMessage
        id="global.consultation"
        values={Object {}}
      />
    </h5>
  </ProjectAdminFormstyle__ProjectBoxHeader>
  <Field
    aria-autocomplete="list"
    aria-haspopup="true"
    autoload={true}
    cacheOptions={true}
    clearable={true}
    component={[Function]}
    debounce={true}
    defaultOptions={true}
    id="step-consultations"
    inputClassName="fake-inputClassName"
    label={
      <FormattedMessage
        id="one-or-more-consultation-step"
        values={Object {}}
      />
    }
    labelClassName="control-label"
    loadOptions={[Function]}
    multi={true}
    name="consultations"
    placeholder=" "
    role="combobox"
    selectFieldIsObject={true}
  />
  <ProjectAdminFormstyle__ProjectBoxHeader>
    <h5>
      <FormattedMessage
        id="requirements"
        values={Object {}}
      />
    </h5>
  </ProjectAdminFormstyle__ProjectBoxHeader>
  <FieldArray
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "type": [Function],
      }
    }
    fcAllowedData={
      Object {
        "DATE_OF_BIRTH": false,
        "FIRSTNAME": true,
        "LASTNAME": true,
      }
    }
    formName="stepForm"
    isFranceConnectConfigured={true}
    name="requirements"
    requirements={
      Array [
        Object {
          "checked": false,
          "label": "Sku",
          "type": "CHECKBOX",
        },
      ]
    }
    stepType="ConsultationStep"
  />
  <Button
    active={false}
    block={false}
    bsClass="btn"
    bsStyle="primary"
    className="btn-outline-primary box-content__toolbar mb-20"
    disabled={false}
    id="js-btn-create-step"
    onClick={[Function]}
  >
    <i
      className="fa fa-plus-circle"
    />
     
    <FormattedMessage
      id="global.add"
      values={Object {}}
    />
  </Button>
  <Field
    component={[Function]}
    id="step-requirementsReason"
    label={
      <FormattedMessage
        id="reason-for-collection"
        values={Object {}}
      />
    }
    name="requirementsReason"
    type="textarea"
  />
</Fragment>
`;

exports[`<ProjectAdminConsultationStepForm /> renders correctly with no initial data 1`] = `
<Fragment>
  <ProjectAdminFormstyle__ProjectBoxHeader>
    <h5>
      <FormattedMessage
        id="global.consultation"
        values={Object {}}
      />
    </h5>
  </ProjectAdminFormstyle__ProjectBoxHeader>
  <Field
    aria-autocomplete="list"
    aria-haspopup="true"
    autoload={true}
    cacheOptions={true}
    clearable={true}
    component={[Function]}
    debounce={true}
    defaultOptions={true}
    id="step-consultations"
    inputClassName="fake-inputClassName"
    label={
      <FormattedMessage
        id="one-or-more-consultation-step"
        values={Object {}}
      />
    }
    labelClassName="control-label"
    loadOptions={[Function]}
    multi={true}
    name="consultations"
    placeholder=" "
    role="combobox"
    selectFieldIsObject={true}
  />
  <ProjectAdminFormstyle__ProjectBoxHeader>
    <h5>
      <FormattedMessage
        id="requirements"
        values={Object {}}
      />
    </h5>
  </ProjectAdminFormstyle__ProjectBoxHeader>
  <FieldArray
    component={
      Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "type": [Function],
      }
    }
    fcAllowedData={
      Object {
        "DATE_OF_BIRTH": false,
        "FIRSTNAME": true,
        "LASTNAME": true,
      }
    }
    formName="stepForm"
    isFranceConnectConfigured={true}
    name="requirements"
    stepType="ConsultationStep"
  />
  <Button
    active={false}
    block={false}
    bsClass="btn"
    bsStyle="primary"
    className="btn-outline-primary box-content__toolbar mb-20"
    disabled={false}
    id="js-btn-create-step"
    onClick={[Function]}
  >
    <i
      className="fa fa-plus-circle"
    />
     
    <FormattedMessage
      id="global.add"
      values={Object {}}
    />
  </Button>
  <Field
    component={[Function]}
    id="step-requirementsReason"
    label={
      <FormattedMessage
        id="reason-for-collection"
        values={Object {}}
      />
    }
    name="requirementsReason"
    type="textarea"
  />
</Fragment>
`;
